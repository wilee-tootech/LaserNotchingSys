// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "ctdigit.h"

/////////////////////////////////////////////////////////////////////////////
// CctDigit

IMPLEMENT_DYNCREATE(CctDigit, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CctDigit properties

BOOL CctDigit::GetEnabled()
{
	BOOL result;
	GetProperty(DISPID_ENABLED, VT_BOOL, (void*)&result);
	return result;
}

void CctDigit::SetEnabled(BOOL propVal)
{
	SetProperty(DISPID_ENABLED, VT_BOOL, propVal);
}

CString CctDigit::GetText()
{
	CString result;
	GetProperty(0x1, VT_BSTR, (void*)&result);
	return result;
}

void CctDigit::SetText(LPCTSTR propVal)
{
	SetProperty(0x1, VT_BSTR, propVal);
}

unsigned long CctDigit::GetBackColor()
{
	unsigned long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CctDigit::SetBackColor(unsigned long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

LPDISPATCH CctDigit::GetBackImage()
{
	LPDISPATCH result;
	GetProperty(0x3, VT_DISPATCH, (void*)&result);
	return result;
}

void CctDigit::SetBackImage(LPDISPATCH propVal)
{
	SetProperty(0x3, VT_DISPATCH, propVal);
}

short CctDigit::GetImageXOffset()
{
	short result;
	GetProperty(0x4, VT_I2, (void*)&result);
	return result;
}

void CctDigit::SetImageXOffset(short propVal)
{
	SetProperty(0x4, VT_I2, propVal);
}

short CctDigit::GetImageYOffset()
{
	short result;
	GetProperty(0x5, VT_I2, (void*)&result);
	return result;
}

void CctDigit::SetImageYOffset(short propVal)
{
	SetProperty(0x5, VT_I2, propVal);
}

long CctDigit::GetAlignment()
{
	long result;
	GetProperty(0x6, VT_I4, (void*)&result);
	return result;
}

void CctDigit::SetAlignment(long propVal)
{
	SetProperty(0x6, VT_I4, propVal);
}

short CctDigit::GetDigitWidth()
{
	short result;
	GetProperty(0x7, VT_I2, (void*)&result);
	return result;
}

void CctDigit::SetDigitWidth(short propVal)
{
	SetProperty(0x7, VT_I2, propVal);
}

long CctDigit::GetBorderType()
{
	long result;
	GetProperty(0x8, VT_I4, (void*)&result);
	return result;
}

void CctDigit::SetBorderType(long propVal)
{
	SetProperty(0x8, VT_I4, propVal);
}

unsigned long CctDigit::GetBorderColor()
{
	unsigned long result;
	GetProperty(0x9, VT_I4, (void*)&result);
	return result;
}

void CctDigit::SetBorderColor(unsigned long propVal)
{
	SetProperty(0x9, VT_I4, propVal);
}

long CctDigit::GetMousePointer()
{
	long result;
	GetProperty(0xa, VT_I4, (void*)&result);
	return result;
}

void CctDigit::SetMousePointer(long propVal)
{
	SetProperty(0xa, VT_I4, propVal);
}

LPDISPATCH CctDigit::GetMouseIcon()
{
	LPDISPATCH result;
	GetProperty(0xb, VT_DISPATCH, (void*)&result);
	return result;
}

void CctDigit::SetMouseIcon(LPDISPATCH propVal)
{
	SetProperty(0xb, VT_DISPATCH, propVal);
}

unsigned long CctDigit::GetForeColor()
{
	unsigned long result;
	GetProperty(0xc, VT_I4, (void*)&result);
	return result;
}

void CctDigit::SetForeColor(unsigned long propVal)
{
	SetProperty(0xc, VT_I4, propVal);
}

long CctDigit::GetHWnd()
{
	long result;
	GetProperty(0xe, VT_I4, (void*)&result);
	return result;
}

void CctDigit::SetHWnd(long propVal)
{
	SetProperty(0xe, VT_I4, propVal);
}

short CctDigit::GetLineWidth()
{
	short result;
	GetProperty(0xf, VT_I2, (void*)&result);
	return result;
}

void CctDigit::SetLineWidth(short propVal)
{
	SetProperty(0xf, VT_I2, propVal);
}

short CctDigit::GetHeightMargin()
{
	short result;
	GetProperty(0x10, VT_I2, (void*)&result);
	return result;
}

void CctDigit::SetHeightMargin(short propVal)
{
	SetProperty(0x10, VT_I2, propVal);
}

short CctDigit::GetWidthMargin()
{
	short result;
	GetProperty(0x11, VT_I2, (void*)&result);
	return result;
}

void CctDigit::SetWidthMargin(short propVal)
{
	SetProperty(0x11, VT_I2, propVal);
}

short CctDigit::GetLineMargin()
{
	short result;
	GetProperty(0x12, VT_I2, (void*)&result);
	return result;
}

void CctDigit::SetLineMargin(short propVal)
{
	SetProperty(0x12, VT_I2, propVal);
}

unsigned long CctDigit::GetDisableColor()
{
	unsigned long result;
	GetProperty(0x13, VT_I4, (void*)&result);
	return result;
}

void CctDigit::SetDisableColor(unsigned long propVal)
{
	SetProperty(0x13, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CctDigit operations

void CctDigit::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
