#if !defined(AFX_CTCOMBO_H__5D030E4C_0C84_4E2C_ADA9_135BA3F9B53E__INCLUDED_)
#define AFX_CTCOMBO_H__5D030E4C_0C84_4E2C_ADA9_135BA3F9B53E__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CctCombo wrapper class

class CctCombo : public CWnd
{
protected:
	DECLARE_DYNCREATE(CctCombo)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xa8003b66, 0xc093, 0x11d4, { 0xa8, 0x5d, 0x0, 0x80, 0xc8, 0xdf, 0xc8, 0x81 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	BOOL GetEnabled();
	void SetEnabled(BOOL);
	LPFONTDISP GetFont();
	void SetFont(LPFONTDISP);
	OLE_HANDLE GetHWnd();
	void SetHWnd(OLE_HANDLE);
	long GetReadyState();
	OLE_COLOR GetForeColor();
	void SetForeColor(OLE_COLOR);
	CString GetText();
	void SetText(LPCTSTR);
	LPDISPATCH GetPicture();
	void SetPicture(LPDISPATCH);
	short GetButtonWidth();
	void SetButtonWidth(short);
	long GetBorderType();
	void SetBorderType(long);
	unsigned long GetBorderColor();
	void SetBorderColor(unsigned long);
	unsigned long GetButtonBackColor();
	void SetButtonBackColor(unsigned long);
	unsigned long GetButtonForeColor();
	void SetButtonForeColor(unsigned long);
	unsigned long GetDisabledColor();
	void SetDisabledColor(unsigned long);
	long GetArrowSize();
	void SetArrowSize(long);
	short GetPicXOffset();
	void SetPicXOffset(short);
	short GetPicYOffset();
	void SetPicYOffset(short);
	short GetTextXOffset();
	void SetTextXOffset(short);
	short GetTextYOffset();
	void SetTextYOffset(short);
	short GetListIndex();
	void SetListIndex(short);
	short GetMaxListItems();
	void SetMaxListItems(short);
	long GetStyle();
	void SetStyle(long);
	BOOL GetAutoSave();
	void SetAutoSave(BOOL);
	short GetAutoFindSize();
	void SetAutoFindSize(short);
	short GetMaxSaveItems();
	void SetMaxSaveItems(short);
	BOOL GetMaskBitmap();
	void SetMaskBitmap(BOOL);
	unsigned long GetMaskColor();
	void SetMaskColor(unsigned long);
	BOOL GetSelectOnFocus();
	void SetSelectOnFocus(BOOL);
	BOOL GetMatchCase();
	void SetMatchCase(BOOL);
	BOOL GetAutoSwap();
	void SetAutoSwap(BOOL);
	long GetDisplayStyle();
	void SetDisplayStyle(long);
	short GetButtonBevel();
	void SetButtonBevel(short);
	BOOL GetEmbossBitmap();
	void SetEmbossBitmap(BOOL);
	long GetListBorder();
	void SetListBorder(long);
	unsigned long GetListBackColor();
	void SetListBackColor(unsigned long);
	unsigned long GetListForeColor();
	void SetListForeColor(unsigned long);
	LPDISPATCH GetDropPicture();
	void SetDropPicture(LPDISPATCH);
	BOOL GetAlternateColor();
	void SetAlternateColor(BOOL);
	short GetAlternateItems();
	void SetAlternateItems(short);
	unsigned long GetAltColorOdd();
	void SetAltColorOdd(unsigned long);
	unsigned long GetAltColorEven();
	void SetAltColorEven(unsigned long);
	BOOL GetDisplayHeader();
	void SetDisplayHeader(BOOL);
	short GetHeaderOffset();
	void SetHeaderOffset(short);
	long GetHeaderBorder();
	void SetHeaderBorder(long);
	unsigned long GetHeaderBackColor();
	void SetHeaderBackColor(unsigned long);
	unsigned long GetHeaderForeColor();
	void SetHeaderForeColor(unsigned long);
	LPDISPATCH GetHeaderFont();
	void SetHeaderFont(LPDISPATCH);
	short GetDataColumn();
	void SetDataColumn(short);
	long GetAutoComplete();
	void SetAutoComplete(long);
	BOOL GetSorted();
	void SetSorted(BOOL);
	BOOL GetVerticalLines();
	void SetVerticalLines(BOOL);
	BOOL GetHorizontalLines();
	void SetHorizontalLines(BOOL);
	short GetListOffset();
	void SetListOffset(short);
	unsigned long GetVertLineColor();
	void SetVertLineColor(unsigned long);
	unsigned long GetHorzLineColor();
	void SetHorzLineColor(unsigned long);
	long GetListAlign();
	void SetListAlign(long);
	CString GetBreakChar();
	void SetBreakChar(LPCTSTR);
	BOOL GetSmallIcons();
	void SetSmallIcons(BOOL);
	short GetImageXOffset();
	void SetImageXOffset(short);
	short GetImageYOffset();
	void SetImageYOffset(short);
	BOOL GetShowListPicture();
	void SetShowListPicture(BOOL);
	long GetScrollStyle();
	void SetScrollStyle(long);
	BOOL GetSelectOnChange();
	void SetSelectOnChange(BOOL);
	LPDISPATCH GetSelectPicture();
	void SetSelectPicture(LPDISPATCH);
	BOOL GetScrollDrop();
	void SetScrollDrop(BOOL);
	short GetScrollSpeed();
	void SetScrollSpeed(short);
	unsigned long GetBackColor();
	void SetBackColor(unsigned long);

// Operations
public:
	short ListCount();
	short AddItem(LPCTSTR strText);
	void ClearList();
	BOOL RemoveItem(short nIndex);
	void HideList();
	BOOL ClearColumns();
	short ColumnCount();
	short AddColumn(LPCTSTR strCaption, short nWidth);
	BOOL RemoveColumn(short nIndex);
	long EditHwnd();
	short InsertItem(LPCTSTR strText, short nIndex);
	void SetItemImage(LPDISPATCH picImage, short nIndex);
	CString GetListText(short nIndex);
	void SetListText(short nIndex, LPCTSTR lpszNewValue);
	CString GetListCargo(short nIndex);
	void SetListCargo(short nIndex, LPCTSTR lpszNewValue);
	long GetListData(short nIndex);
	void SetListData(short nIndex, long nNewValue);
	short GetColumnWidth(short nColumn);
	void SetColumnWidth(short nColumn, short nNewValue);
	short GetColumnAlign(short nColumn);
	void SetColumnAlign(short nColumn, short nNewValue);
	CString GetColumnText(short nIndex);
	void SetColumnText(short nIndex, LPCTSTR lpszNewValue);
	LPDISPATCH GetListImage(short nIndex);
	void SetListImage(short nIndex, LPDISPATCH newValue);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_CTCOMBO_H__5D030E4C_0C84_4E2C_ADA9_135BA3F9B53E__INCLUDED_)
