#if !defined(AFX_CTLIST_H__358C85B6_AB51_11D5_8C03_000296009500__INCLUDED_)
#define AFX_CTLIST_H__358C85B6_AB51_11D5_8C03_000296009500__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CctList wrapper class

// test
class CctList : public CWnd
{
protected:
	DECLARE_DYNCREATE(CctList)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x97ccb606, 0x956, 0x11d4, { 0x94, 0x66, 0xe4, 0xe1, 0xe, 0xc1, 0x0, 0x0 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	BOOL GetEnabled();
	void SetEnabled(BOOL);
	LPFONTDISP GetFont();
	void SetFont(LPFONTDISP);
	OLE_COLOR GetForeColor();
	void SetForeColor(OLE_COLOR);
	OLE_HANDLE GetHWnd();
	void SetHWnd(OLE_HANDLE);
	unsigned long GetBorderColor();
	void SetBorderColor(unsigned long);
	long GetBorderType();
	void SetBorderType(long);
	unsigned long GetTitleBackColor();
	void SetTitleBackColor(unsigned long);
	unsigned long GetTitleForeColor();
	void SetTitleForeColor(unsigned long);
	LPDISPATCH GetTitleFont();
	void SetTitleFont(LPDISPATCH);
	CString GetTitleText();
	void SetTitleText(LPCTSTR);
	LPDISPATCH GetTitleBackImage();
	void SetTitleBackImage(LPDISPATCH);
	LPDISPATCH GetHeaderFont();
	void SetHeaderFont(LPDISPATCH);
	unsigned long GetShadowColor();
	void SetShadowColor(unsigned long);
	long GetHeaderAlign();
	void SetHeaderAlign(long);
	unsigned long GetHeaderBackColor();
	void SetHeaderBackColor(unsigned long);
	unsigned long GetHeaderForeColor();
	void SetHeaderForeColor(unsigned long);
	long GetHeaderBorder();
	void SetHeaderBorder(long);
	short GetHeaderOffset();
	void SetHeaderOffset(short);
	short GetTitleOffset();
	void SetTitleOffset(short);
	short GetHeaderXOffset();
	void SetHeaderXOffset(short);
	short GetHeaderYOffset();
	void SetHeaderYOffset(short);
	long GetTitleAlign();
	void SetTitleAlign(long);
	long GetTitleBorder();
	void SetTitleBorder(long);
	short GetTitleXOffset();
	void SetTitleXOffset(short);
	short GetTitleYOffset();
	void SetTitleYOffset(short);
	unsigned long GetAltColorOdd();
	void SetAltColorOdd(unsigned long);
	unsigned long GetAltColorEven();
	void SetAltColorEven(unsigned long);
	BOOL GetAlternateColor();
	void SetAlternateColor(BOOL);
	BOOL GetMaskBitmap();
	void SetMaskBitmap(BOOL);
	unsigned long GetMaskColor();
	void SetMaskColor(unsigned long);
	short GetHeightOffset();
	void SetHeightOffset(short);
	BOOL GetHorzScroll();
	void SetHorzScroll(BOOL);
	unsigned long GetSelectedBackColor();
	void SetSelectedBackColor(unsigned long);
	unsigned long GetSelectedForeColor();
	void SetSelectedForeColor(unsigned long);
	short GetHorzRange();
	void SetHorzRange(short);
	BOOL GetHorzAutoSize();
	void SetHorzAutoSize(BOOL);
	long GetPreColumnType();
	void SetPreColumnType(long);
	short GetPreColumnWidth();
	void SetPreColumnWidth(short);
	BOOL GetMultiSelect();
	void SetMultiSelect(BOOL);
	long GetListAlign();
	void SetListAlign(long);
	long GetSelected();
	void SetSelected(long);
	long GetListIndex();
	void SetListIndex(long);
	BOOL GetHorzGridLines();
	void SetHorzGridLines(BOOL);
	unsigned long GetHorzGridColor();
	void SetHorzGridColor(unsigned long);
	BOOL GetVertGridLines();
	void SetVertGridLines(BOOL);
	unsigned long GetVertGridColor();
	void SetVertGridColor(unsigned long);
	long GetTitleTextStyle();
	void SetTitleTextStyle(long);
	long GetFocusType();
	void SetFocusType(long);
	unsigned long GetSubTextColor();
	void SetSubTextColor(unsigned long);
	LPDISPATCH GetSubTextFont();
	void SetSubTextFont(LPDISPATCH);
	short GetSubTextIndent();
	void SetSubTextIndent(short);
	BOOL GetScrollOnVThumb();
	void SetScrollOnVThumb(BOOL);
	BOOL GetScrollOnHThumb();
	void SetScrollOnHThumb(BOOL);
	unsigned long GetTipsBackColor();
	void SetTipsBackColor(unsigned long);
	unsigned long GetTipsForeColor();
	void SetTipsForeColor(unsigned long);
	short GetTipsDistance();
	void SetTipsDistance(short);
	long GetTipsPosition();
	void SetTipsPosition(long);
	CString GetTipsText();
	void SetTipsText(LPCTSTR);
	LPDISPATCH GetTipsFont();
	void SetTipsFont(LPDISPATCH);
	long GetPicAlign();
	void SetPicAlign(long);
	short GetPicXOffset();
	void SetPicXOffset(short);
	short GetPicYOffset();
	void SetPicYOffset(short);
	long GetCheckAlign();
	void SetCheckAlign(long);
	short GetCheckXOffset();
	void SetCheckXOffset(short);
	short GetCheckYOffset();
	void SetCheckYOffset(short);
	BOOL GetMultiLine();
	void SetMultiLine(BOOL);
	BOOL GetSelectOnScroll();
	void SetSelectOnScroll(BOOL);
	short GetSortColumn();
	void SetSortColumn(short);
	long GetSortDirection();
	void SetSortDirection(long);
	BOOL GetSortOnCase();
	void SetSortOnCase(BOOL);
	BOOL GetSortArrows();
	void SetSortArrows(BOOL);
	LPDISPATCH GetCheckPicDown();
	void SetCheckPicDown(LPDISPATCH);
	LPDISPATCH GetCheckPicUp();
	void SetCheckPicUp(LPDISPATCH);
	CString GetBreakChar();
	void SetBreakChar(LPCTSTR);
	short GetSubColumnStart();
	void SetSubColumnStart(short);
	short GetSubColumnEnd();
	void SetSubColumnEnd(short);
	BOOL GetSmoothScroll();
	void SetSmoothScroll(BOOL);
	short GetScrollSpeed();
	void SetScrollSpeed(short);
	short GetImageListCount();
	void SetImageListCount(short);
	BOOL GetSmallIcons();
	void SetSmallIcons(BOOL);
	LPDISPATCH GetBackImage();
	void SetBackImage(LPDISPATCH);
	unsigned long GetNoFocusBackColor();
	void SetNoFocusBackColor(unsigned long);
	unsigned long GetNoFocusForeColor();
	void SetNoFocusForeColor(unsigned long);
	BOOL GetLabelEdit();
	void SetLabelEdit(BOOL);
	long GetSelectedStyle();
	void SetSelectedStyle(long);
	long GetArrowAlign();
	void SetArrowAlign(long);
	short GetArrowXOffset();
	void SetArrowXOffset(short);
	short GetArrowYOffset();
	void SetArrowYOffset(short);
	LPDISPATCH GetCheckPicDisabled();
	void SetCheckPicDisabled(LPDISPATCH);
	LPDISPATCH GetPrintTitleFont();
	void SetPrintTitleFont(LPDISPATCH);
	CString GetPrintTitle();
	void SetPrintTitle(LPCTSTR);
	CString GetPrintSubTitle();
	void SetPrintSubTitle(LPCTSTR);
	short GetPageXOffset();
	void SetPageXOffset(short);
	short GetPageYOffset();
	void SetPageYOffset(short);
	short GetPrintOffset();
	void SetPrintOffset(short);
	long GetPrintTitleAlign();
	void SetPrintTitleAlign(long);
	unsigned long GetPrintBackColor();
	void SetPrintBackColor(unsigned long);
	short GetAlternateItems();
	void SetAlternateItems(short);
	LPDISPATCH GetMouseIcon();
	void SetMouseIcon(LPDISPATCH);
	long GetMousePointer();
	void SetMousePointer(long);
	long GetPreColumnBorder();
	void SetPreColumnBorder(long);
	unsigned long GetPreColumnBackColor();
	void SetPreColumnBackColor(unsigned long);
	unsigned long GetPreColumnForeColor();
	void SetPreColumnForeColor(unsigned long);
	LPDISPATCH GetPreColumnPicture();
	void SetPreColumnPicture(LPDISPATCH);
	long GetPreSelectBorder();
	void SetPreSelectBorder(long);
	unsigned long GetPreSelectBackColor();
	void SetPreSelectBackColor(unsigned long);
	unsigned long GetPreSelectForeColor();
	void SetPreSelectForeColor(unsigned long);
	BOOL GetHeaderMultiLine();
	void SetHeaderMultiLine(BOOL);
	long GetPrintMapMode();
	void SetPrintMapMode(long);
	long GetTipsType();
	void SetTipsType(long);
	BOOL GetColumnPriority();
	void SetColumnPriority(BOOL);
	BOOL GetDisplayTitle();
	void SetDisplayTitle(BOOL);
	BOOL GetDisplayHeader();
	void SetDisplayHeader(BOOL);
	short GetTipsDelay();
	void SetTipsDelay(short);
	long GetTipsTextAlign();
	void SetTipsTextAlign(long);
	short GetDateOffset();
	void SetDateOffset(short);
	long GetDateFormat();
	void SetDateFormat(long);
	BOOL GetIncludeSeconds();
	void SetIncludeSeconds(BOOL);
	BOOL GetIncludeAmPm();
	void SetIncludeAmPm(BOOL);
	BOOL GetIncludeTime();
	void SetIncludeTime(BOOL);
	CString GetDateSepChar();
	void SetDateSepChar(LPCTSTR);
	CString GetTimeSepChar();
	void SetTimeSepChar(LPCTSTR);
	BOOL GetLongYear();
	void SetLongYear(BOOL);
	long GetHeaderPicAlign();
	void SetHeaderPicAlign(long);
	CString GetDecimalChar();
	void SetDecimalChar(LPCTSTR);
	BOOL GetSorted();
	void SetSorted(BOOL);
	long GetTopRow();
	void SetTopRow(long);

// Operations
public:
	short ColumnCount();
	short AddColumn(LPCTSTR strCaption, short nWidth);
	BOOL ClearColumns();
	long AddItem(LPCTSTR strText);
	long ListCount();
	short InsertColumn(LPCTSTR strCaption, short nWidth, short nIndex);
	long InsertItem(LPCTSTR strCaption, long nIndex);
	BOOL ClearList();
	BOOL RemoveColumn(short nIndex);
	BOOL RemoveItem(long nIndex);
	void ClearFont(long nIndex);
	void ListFont(LPDISPATCH fntFont, long nIndex);
	short ItemHeight();
	long DragDrop(short nxPosn, short nyPosn);
	long DragOver(short nxPosn, short nyPosn, short nState);
	void ReDraw(BOOL nType);
	BOOL SortList();
	void CancelSort();
	BOOL SortNewColumn(short nColumn);
	short SubTextHeight();
	short CalcSubTextHeight(long nIndex);
	long ctDragDrop(short nxPosn, short nyPosn);
	long ctDragOver(short nxPosn, short nyPosn, short nState);
	short AddImage(LPDISPATCH picImage);
	BOOL RemoveImage(short nIndex);
	long RemoveSelected();
	void CancelEdit();
	BOOL StartLabelEdit();
	BOOL PrintList();
	void AbortPrint();
	BOOL PrintInWindow(long nHDC, short nLeft, short nTop, short nRight, short nBottom);
	long FindText(LPCTSTR strText, long nIndex, short nColumn, BOOL bSoftSeek, BOOL bMatchCase);
	void SortMultiColumns(short nColumn1, short nColumn2, short nColumn3);
	short GetColumnWidth(short nIndex);
	void SetColumnWidth(short nIndex, short nNewValue);
	short GetColumnTextAlign(short nIndex);
	void SetColumnTextAlign(short nIndex, short nNewValue);
	short GetColumnPicture(short nIndex);
	void SetColumnPicture(short nIndex, short nNewValue);
	CString GetColumnText(short nIndex);
	void SetColumnText(short nIndex, LPCTSTR lpszNewValue);
	BOOL GetColumnLock(short nIndex);
	void SetColumnLock(short nIndex, BOOL bNewValue);
	short GetColumnCheckBox(short nIndex);
	void SetColumnCheckBox(short nIndex, short nNewValue);
	CString GetListText(long nIndex);
	void SetListText(long nIndex, LPCTSTR lpszNewValue);
	unsigned long GetListBackColor(long nIndex);
	void SetListBackColor(long nIndex, unsigned long newValue);
	unsigned long GetListForeColor(long nIndex);
	void SetListForeColor(long nIndex, unsigned long newValue);
	unsigned long GetColumnBackColor(short nIndex);
	void SetColumnBackColor(short nIndex, unsigned long newValue);
	BOOL GetColumnSortable(short nIndex);
	void SetColumnSortable(short nIndex, BOOL bNewValue);
	unsigned long GetColumnForeColor(short nIndex);
	void SetColumnForeColor(short nIndex, unsigned long newValue);
	CString GetListSubText(long nIndex);
	void SetListSubText(long nIndex, LPCTSTR lpszNewValue);
	CString GetListCargo(long nIndex);
	void SetListCargo(long nIndex, LPCTSTR lpszNewValue);
	short GetListSubHeight(long nIndex);
	void SetListSubHeight(long nIndex, short nNewValue);
	CString GetCellText(long nIndex, short nColumn);
	void SetCellText(long nIndex, short nColumn, LPCTSTR lpszNewValue);
	short GetCellPicture(long nIndex, short nColumn);
	void SetCellPicture(long nIndex, short nColumn, short nNewValue);
	short GetColumnPictureAlign(short nIndex);
	void SetColumnPictureAlign(short nIndex, short nNewValue);
	short GetColumnCheckAlign(short nIndex);
	void SetColumnCheckAlign(short nIndex, short nNewValue);
	short GetCellCheck(long nIndex, short nColumn);
	void SetCellCheck(long nIndex, short nColumn, short nNewValue);
	short GetCellPicSelect(long nIndex, short nColumn);
	void SetCellPicSelect(long nIndex, short nColumn, short nNewValue);
	long GetListData(long nIndex);
	void SetListData(long nIndex, long nNewValue);
	BOOL GetListSelect(long nIndex);
	void SetListSelect(long nIndex, BOOL bNewValue);
	short GetListIndent(long nIndex);
	void SetListIndent(long nIndex, short nNewValue);
	short GetListFontBold(long nIndex);
	void SetListFontBold(long nIndex, short nNewValue);
	LPDISPATCH GetListImage(short nIndex);
	void SetListImage(short nIndex, LPDISPATCH newValue);
	BOOL GetListHeader(long nIndex);
	void SetListHeader(long nIndex, BOOL bNewValue);
	short GetColumnDataType(short nColumn);
	void SetColumnDataType(short nColumn, short nNewValue);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_CTLIST_H__358C85B6_AB51_11D5_8C03_000296009500__INCLUDED_)
