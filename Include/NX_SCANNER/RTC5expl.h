//-----------------------------------------------------------------------------
//  File: RTC5expl.h                              Copyright (c) 2010 SCANLAB AG
//-----------------------------------------------------------------------------
//
//
//
//  Abstract
//      RTC5 function prototypes for explicitly linking - also known as
//      dynamic load linking - to the RTC5DLL.DLL
//
//      This file was automatically generated at 04.12.2013
//
//-----------------------------------------------------------------------------

//------------------------ DLL Handling ---------------------------------------

#include <windows.h>

#if defined(__cplusplus)
extern "C" {
#endif //defined(__cplusplus)

#if !defined(ULONG_PTR)         //  usually defined in <BaseTsd.h>
    #if defined(WIN32)
        #define ULONG_PTR UINT
    #else
        #define ULONG_PTR UINT64
    #endif // defined(WIN32)
#endif // !defined(ULONG_PTR)

long RTC5open(void);
void RTC5close(void);

typedef UINT (__stdcall *INIT_RTC5_DLL)(void);
extern INIT_RTC5_DLL init_rtc5_dll;
typedef void (__stdcall *FREE_RTC5_DLL)(void);
extern FREE_RTC5_DLL free_rtc5_dll;
typedef void (__stdcall *SET_RTC4_MODE)(void);
extern SET_RTC4_MODE set_rtc4_mode;
typedef void (__stdcall *SET_RTC5_MODE)(void);
extern SET_RTC5_MODE set_rtc5_mode;
typedef UINT (__stdcall *GET_RTC_MODE)(void);
extern GET_RTC_MODE get_rtc_mode;
typedef UINT (__stdcall *N_GET_ERROR)(const UINT CardNo);
extern N_GET_ERROR n_get_error;
typedef UINT (__stdcall *N_GET_LAST_ERROR)(const UINT CardNo);
extern N_GET_LAST_ERROR n_get_last_error;
typedef void (__stdcall *N_RESET_ERROR)(const UINT CardNo, const UINT Code);
extern N_RESET_ERROR n_reset_error;
typedef UINT (__stdcall *N_SET_VERIFY)(const UINT CardNo, const UINT Verify);
extern N_SET_VERIFY n_set_verify;
typedef UINT (__stdcall *GET_ERROR)(void);
extern GET_ERROR get_error;
typedef UINT (__stdcall *GET_LAST_ERROR)(void);
extern GET_LAST_ERROR get_last_error;
typedef void (__stdcall *RESET_ERROR)(const UINT Code);
extern RESET_ERROR reset_error;
typedef UINT (__stdcall *SET_VERIFY)(const UINT Verify);
extern SET_VERIFY set_verify;
typedef UINT (__stdcall *VERIFY_CHECKSUM)(const char* Name);
extern VERIFY_CHECKSUM verify_checksum;
typedef UINT (__stdcall *RTC5_COUNT_CARDS)(void);
extern RTC5_COUNT_CARDS rtc5_count_cards;
typedef UINT (__stdcall *ACQUIRE_RTC)(const UINT CardNo);
extern ACQUIRE_RTC acquire_rtc;
typedef UINT (__stdcall *RELEASE_RTC)(const UINT CardNo);
extern RELEASE_RTC release_rtc;
typedef UINT (__stdcall *SELECT_RTC)(const UINT CardNo);
extern SELECT_RTC select_rtc;
typedef UINT (__stdcall *GET_DLL_VERSION)(void);
extern GET_DLL_VERSION get_dll_version;
typedef UINT (__stdcall *N_GET_SERIAL_NUMBER)(const UINT CardNo);
extern N_GET_SERIAL_NUMBER n_get_serial_number;
typedef UINT (__stdcall *N_GET_HEX_VERSION)(const UINT CardNo);
extern N_GET_HEX_VERSION n_get_hex_version;
typedef UINT (__stdcall *N_GET_RTC_VERSION)(const UINT CardNo);
extern N_GET_RTC_VERSION n_get_rtc_version;
typedef UINT (__stdcall *GET_SERIAL_NUMBER)(void);
extern GET_SERIAL_NUMBER get_serial_number;
typedef UINT (__stdcall *GET_HEX_VERSION)(void);
extern GET_HEX_VERSION get_hex_version;
typedef UINT (__stdcall *GET_RTC_VERSION)(void);
extern GET_RTC_VERSION get_rtc_version;
typedef UINT (__stdcall *N_LOAD_PROGRAM_FILE)(const UINT CardNo, const char* Path);
extern N_LOAD_PROGRAM_FILE n_load_program_file;
typedef void (__stdcall *N_SYNC_SLAVES)(const UINT CardNo);
extern N_SYNC_SLAVES n_sync_slaves;
typedef UINT (__stdcall *N_GET_SYNC_STATUS)(const UINT CardNo);
extern N_GET_SYNC_STATUS n_get_sync_status;
typedef UINT (__stdcall *N_LOAD_CORRECTION_FILE)(const UINT CardNo, const char* Name, const UINT No, const UINT Dim);
extern N_LOAD_CORRECTION_FILE n_load_correction_file;
typedef UINT (__stdcall *N_LOAD_Z_TABLE)(const UINT CardNo, const double A, const double B, const double C);
extern N_LOAD_Z_TABLE n_load_z_table;
typedef void (__stdcall *N_SELECT_COR_TABLE)(const UINT CardNo, const UINT HeadA, const UINT HeadB);
extern N_SELECT_COR_TABLE n_select_cor_table;
typedef UINT (__stdcall *N_SET_DSP_MODE)(const UINT CardNo, const UINT Mode);
extern N_SET_DSP_MODE n_set_dsp_mode;
typedef long (__stdcall *N_LOAD_STRETCH_TABLE)(const UINT CardNo, const char* Name, const long No);
extern N_LOAD_STRETCH_TABLE n_load_stretch_table;
typedef double (__stdcall *N_GET_HEAD_PARA)(const UINT CardNo, const UINT HeadNo, const UINT ParaNo);
extern N_GET_HEAD_PARA n_get_head_para;
typedef double (__stdcall *N_GET_TABLE_PARA)(const UINT CardNo, const UINT TableNo, const UINT ParaNo);
extern N_GET_TABLE_PARA n_get_table_para;
typedef UINT (__stdcall *LOAD_PROGRAM_FILE)(const char* Path);
extern LOAD_PROGRAM_FILE load_program_file;
typedef void (__stdcall *SYNC_SLAVES)(void);
extern SYNC_SLAVES sync_slaves;
typedef UINT (__stdcall *GET_SYNC_STATUS)(void);
extern GET_SYNC_STATUS get_sync_status;
typedef UINT (__stdcall *LOAD_CORRECTION_FILE)(const char* Name, const UINT No, const UINT Dim);
extern LOAD_CORRECTION_FILE load_correction_file;
typedef UINT (__stdcall *LOAD_Z_TABLE)(const double A, const double B, const double C);
extern LOAD_Z_TABLE load_z_table;
typedef void (__stdcall *SELECT_COR_TABLE)(const UINT HeadA, const UINT HeadB);
extern SELECT_COR_TABLE select_cor_table;
typedef UINT (__stdcall *SET_DSP_MODE)(const UINT Mode);
extern SET_DSP_MODE set_dsp_mode;
typedef long (__stdcall *LOAD_STRETCH_TABLE)(const char* Name, const long No);
extern LOAD_STRETCH_TABLE load_stretch_table;
typedef double (__stdcall *GET_HEAD_PARA)(const UINT HeadNo, const UINT ParaNo);
extern GET_HEAD_PARA get_head_para;
typedef double (__stdcall *GET_TABLE_PARA)(const UINT TableNo, const UINT ParaNo);
extern GET_TABLE_PARA get_table_para;
typedef void (__stdcall *N_CONFIG_LIST)(const UINT CardNo, const UINT Mem1, const UINT Mem2);
extern N_CONFIG_LIST n_config_list;
typedef void (__stdcall *N_GET_CONFIG_LIST)(const UINT CardNo);
extern N_GET_CONFIG_LIST n_get_config_list;
typedef UINT (__stdcall *N_SAVE_DISK)(const UINT CardNo, const char* Name, const UINT Mode);
extern N_SAVE_DISK n_save_disk;
typedef UINT (__stdcall *N_LOAD_DISK)(const UINT CardNo, const char* Name, const UINT Mode);
extern N_LOAD_DISK n_load_disk;
typedef UINT (__stdcall *N_GET_LIST_SPACE)(const UINT CardNo);
extern N_GET_LIST_SPACE n_get_list_space;
typedef void (__stdcall *CONFIG_LIST)(const UINT Mem1, const UINT Mem2);
extern CONFIG_LIST config_list;
typedef void (__stdcall *GET_CONFIG_LIST)(void);
extern GET_CONFIG_LIST get_config_list;
typedef UINT (__stdcall *SAVE_DISK)(const char* Name, const UINT Mode);
extern SAVE_DISK save_disk;
typedef UINT (__stdcall *LOAD_DISK)(const char* Name, const UINT Mode);
extern LOAD_DISK load_disk;
typedef UINT (__stdcall *GET_LIST_SPACE)(void);
extern GET_LIST_SPACE get_list_space;
typedef void (__stdcall *N_SET_START_LIST_POS)(const UINT CardNo, const UINT ListNo, const UINT Pos);
extern N_SET_START_LIST_POS n_set_start_list_pos;
typedef void (__stdcall *N_SET_START_LIST)(const UINT CardNo, const UINT ListNo);
extern N_SET_START_LIST n_set_start_list;
typedef void (__stdcall *N_SET_START_LIST_1)(const UINT CardNo);
extern N_SET_START_LIST_1 n_set_start_list_1;
typedef void (__stdcall *N_SET_START_LIST_2)(const UINT CardNo);
extern N_SET_START_LIST_2 n_set_start_list_2;
typedef void (__stdcall *N_SET_INPUT_POINTER)(const UINT CardNo, const UINT Pos);
extern N_SET_INPUT_POINTER n_set_input_pointer;
typedef UINT (__stdcall *N_LOAD_LIST)(const UINT CardNo, const UINT ListNo, const UINT Pos);
extern N_LOAD_LIST n_load_list;
typedef void (__stdcall *N_LOAD_SUB)(const UINT CardNo, const UINT Index);
extern N_LOAD_SUB n_load_sub;
typedef void (__stdcall *N_LOAD_CHAR)(const UINT CardNo, const UINT Char);
extern N_LOAD_CHAR n_load_char;
typedef void (__stdcall *N_LOAD_TEXT_TABLE)(const UINT CardNo, const UINT Index);
extern N_LOAD_TEXT_TABLE n_load_text_table;
typedef void (__stdcall *N_GET_LIST_POINTER)(const UINT CardNo, UINT* ListNo, UINT* Pos);
extern N_GET_LIST_POINTER n_get_list_pointer;
typedef UINT (__stdcall *N_GET_INPUT_POINTER)(const UINT CardNo);
extern N_GET_INPUT_POINTER n_get_input_pointer;
typedef void (__stdcall *SET_START_LIST_POS)(const UINT ListNo, const UINT Pos);
extern SET_START_LIST_POS set_start_list_pos;
typedef void (__stdcall *SET_START_LIST)(const UINT ListNo);
extern SET_START_LIST set_start_list;
typedef void (__stdcall *SET_START_LIST_1)(void);
extern SET_START_LIST_1 set_start_list_1;
typedef void (__stdcall *SET_START_LIST_2)(void);
extern SET_START_LIST_2 set_start_list_2;
typedef void (__stdcall *SET_INPUT_POINTER)(const UINT Pos);
extern SET_INPUT_POINTER set_input_pointer;
typedef UINT (__stdcall *LOAD_LIST)(const UINT ListNo, const UINT Pos);
extern LOAD_LIST load_list;
typedef void (__stdcall *LOAD_SUB)(const UINT Index);
extern LOAD_SUB load_sub;
typedef void (__stdcall *LOAD_CHAR)(const UINT Char);
extern LOAD_CHAR load_char;
typedef void (__stdcall *LOAD_TEXT_TABLE)(const UINT Index);
extern LOAD_TEXT_TABLE load_text_table;
typedef void (__stdcall *GET_LIST_POINTER)(UINT* ListNo, UINT* Pos);
extern GET_LIST_POINTER get_list_pointer;
typedef UINT (__stdcall *GET_INPUT_POINTER)(void);
extern GET_INPUT_POINTER get_input_pointer;
typedef void (__stdcall *N_EXECUTE_LIST_POS)(const UINT CardNo, const UINT ListNo, const UINT Pos);
extern N_EXECUTE_LIST_POS n_execute_list_pos;
typedef void (__stdcall *N_EXECUTE_AT_POINTER)(const UINT CardNo, const UINT Pos);
extern N_EXECUTE_AT_POINTER n_execute_at_pointer;
typedef void (__stdcall *N_EXECUTE_LIST)(const UINT CardNo, const UINT ListNo);
extern N_EXECUTE_LIST n_execute_list;
typedef void (__stdcall *N_EXECUTE_LIST_1)(const UINT CardNo);
extern N_EXECUTE_LIST_1 n_execute_list_1;
typedef void (__stdcall *N_EXECUTE_LIST_2)(const UINT CardNo);
extern N_EXECUTE_LIST_2 n_execute_list_2;
typedef void (__stdcall *N_GET_OUT_POINTER)(const UINT CardNo, UINT* ListNo, UINT* Pos);
extern N_GET_OUT_POINTER n_get_out_pointer;
typedef void (__stdcall *EXECUTE_LIST_POS)(const UINT ListNo, const UINT Pos);
extern EXECUTE_LIST_POS execute_list_pos;
typedef void (__stdcall *EXECUTE_AT_POINTER)(const UINT Pos);
extern EXECUTE_AT_POINTER execute_at_pointer;
typedef void (__stdcall *EXECUTE_LIST)(const UINT ListNo);
extern EXECUTE_LIST execute_list;
typedef void (__stdcall *EXECUTE_LIST_1)(void);
extern EXECUTE_LIST_1 execute_list_1;
typedef void (__stdcall *EXECUTE_LIST_2)(void);
extern EXECUTE_LIST_2 execute_list_2;
typedef void (__stdcall *GET_OUT_POINTER)(UINT* ListNo, UINT* Pos);
extern GET_OUT_POINTER get_out_pointer;
typedef void (__stdcall *N_AUTO_CHANGE_POS)(const UINT CardNo, const UINT Pos);
extern N_AUTO_CHANGE_POS n_auto_change_pos;
typedef void (__stdcall *N_START_LOOP)(const UINT CardNo);
extern N_START_LOOP n_start_loop;
typedef void (__stdcall *N_QUIT_LOOP)(const UINT CardNo);
extern N_QUIT_LOOP n_quit_loop;
typedef void (__stdcall *N_PAUSE_LIST)(const UINT CardNo);
extern N_PAUSE_LIST n_pause_list;
typedef void (__stdcall *N_RESTART_LIST)(const UINT CardNo);
extern N_RESTART_LIST n_restart_list;
typedef void (__stdcall *N_RELEASE_WAIT)(const UINT CardNo);
extern N_RELEASE_WAIT n_release_wait;
typedef void (__stdcall *N_STOP_EXECUTION)(const UINT CardNo);
extern N_STOP_EXECUTION n_stop_execution;
typedef void (__stdcall *N_AUTO_CHANGE)(const UINT CardNo);
extern N_AUTO_CHANGE n_auto_change;
typedef void (__stdcall *N_STOP_LIST)(const UINT CardNo);
extern N_STOP_LIST n_stop_list;
typedef UINT (__stdcall *N_GET_WAIT_STATUS)(const UINT CardNo);
extern N_GET_WAIT_STATUS n_get_wait_status;
typedef UINT (__stdcall *N_READ_STATUS)(const UINT CardNo);
extern N_READ_STATUS n_read_status;
typedef void (__stdcall *N_GET_STATUS)(const UINT CardNo, UINT* Status, UINT* Pos);
extern N_GET_STATUS n_get_status;
typedef void (__stdcall *AUTO_CHANGE_POS)(const UINT Pos);
extern AUTO_CHANGE_POS auto_change_pos;
typedef void (__stdcall *START_LOOP)(void);
extern START_LOOP start_loop;
typedef void (__stdcall *QUIT_LOOP)(void);
extern QUIT_LOOP quit_loop;
typedef void (__stdcall *PAUSE_LIST)(void);
extern PAUSE_LIST pause_list;
typedef void (__stdcall *RESTART_LIST)(void);
extern RESTART_LIST restart_list;
typedef void (__stdcall *RELEASE_WAIT)(void);
extern RELEASE_WAIT release_wait;
typedef void (__stdcall *STOP_EXECUTION)(void);
extern STOP_EXECUTION stop_execution;
typedef void (__stdcall *AUTO_CHANGE)(void);
extern AUTO_CHANGE auto_change;
typedef void (__stdcall *STOP_LIST)(void);
extern STOP_LIST stop_list;
typedef UINT (__stdcall *GET_WAIT_STATUS)(void);
extern GET_WAIT_STATUS get_wait_status;
typedef UINT (__stdcall *READ_STATUS)(void);
extern READ_STATUS read_status;
typedef void (__stdcall *GET_STATUS)(UINT* Status, UINT* Pos);
extern GET_STATUS get_status;
typedef void (__stdcall *N_SET_EXTSTARTPOS)(const UINT CardNo, const UINT Pos);
extern N_SET_EXTSTARTPOS n_set_extstartpos;
typedef void (__stdcall *N_SET_MAX_COUNTS)(const UINT CardNo, const UINT Counts);
extern N_SET_MAX_COUNTS n_set_max_counts;
typedef void (__stdcall *N_SET_CONTROL_MODE)(const UINT CardNo, const UINT Mode);
extern N_SET_CONTROL_MODE n_set_control_mode;
typedef void (__stdcall *N_SIMULATE_EXT_STOP)(const UINT CardNo);
extern N_SIMULATE_EXT_STOP n_simulate_ext_stop;
typedef void (__stdcall *N_SIMULATE_EXT_START_CTRL)(const UINT CardNo);
extern N_SIMULATE_EXT_START_CTRL n_simulate_ext_start_ctrl;
typedef UINT (__stdcall *N_GET_COUNTS)(const UINT CardNo);
extern N_GET_COUNTS n_get_counts;
typedef UINT (__stdcall *N_GET_STARTSTOP_INFO)(const UINT CardNo);
extern N_GET_STARTSTOP_INFO n_get_startstop_info;
typedef void (__stdcall *SET_EXTSTARTPOS)(const UINT Pos);
extern SET_EXTSTARTPOS set_extstartpos;
typedef void (__stdcall *SET_MAX_COUNTS)(const UINT Counts);
extern SET_MAX_COUNTS set_max_counts;
typedef void (__stdcall *SET_CONTROL_MODE)(const UINT Mode);
extern SET_CONTROL_MODE set_control_mode;
typedef void (__stdcall *SIMULATE_EXT_STOP)(void);
extern SIMULATE_EXT_STOP simulate_ext_stop;
typedef void (__stdcall *SIMULATE_EXT_START_CTRL)(void);
extern SIMULATE_EXT_START_CTRL simulate_ext_start_ctrl;
typedef UINT (__stdcall *GET_COUNTS)(void);
extern GET_COUNTS get_counts;
typedef UINT (__stdcall *GET_STARTSTOP_INFO)(void);
extern GET_STARTSTOP_INFO get_startstop_info;
typedef void (__stdcall *N_COPY_DST_SRC)(const UINT CardNo, const UINT Dst, const UINT Src, const UINT Mode);
extern N_COPY_DST_SRC n_copy_dst_src;
typedef void (__stdcall *N_SET_CHAR_POINTER)(const UINT CardNo, const UINT Char, const UINT Pos);
extern N_SET_CHAR_POINTER n_set_char_pointer;
typedef void (__stdcall *N_SET_SUB_POINTER)(const UINT CardNo, const UINT Index, const UINT Pos);
extern N_SET_SUB_POINTER n_set_sub_pointer;
typedef void (__stdcall *N_SET_TEXT_TABLE_POINTER)(const UINT CardNo, const UINT Index, const UINT Pos);
extern N_SET_TEXT_TABLE_POINTER n_set_text_table_pointer;
typedef void (__stdcall *N_SET_CHAR_TABLE)(const UINT CardNo, const UINT Index, const UINT Pos);
extern N_SET_CHAR_TABLE n_set_char_table;
typedef UINT (__stdcall *N_GET_CHAR_POINTER)(const UINT CardNo, const UINT Char);
extern N_GET_CHAR_POINTER n_get_char_pointer;
typedef UINT (__stdcall *N_GET_SUB_POINTER)(const UINT CardNo, const UINT Index);
extern N_GET_SUB_POINTER n_get_sub_pointer;
typedef UINT (__stdcall *N_GET_TEXT_TABLE_POINTER)(const UINT CardNo, const UINT Index);
extern N_GET_TEXT_TABLE_POINTER n_get_text_table_pointer;
typedef void (__stdcall *COPY_DST_SRC)(const UINT Dst, const UINT Src, const UINT Mode);
extern COPY_DST_SRC copy_dst_src;
typedef void (__stdcall *SET_CHAR_POINTER)(const UINT Char, const UINT Pos);
extern SET_CHAR_POINTER set_char_pointer;
typedef void (__stdcall *SET_SUB_POINTER)(const UINT Index, const UINT Pos);
extern SET_SUB_POINTER set_sub_pointer;
typedef void (__stdcall *SET_TEXT_TABLE_POINTER)(const UINT Index, const UINT Pos);
extern SET_TEXT_TABLE_POINTER set_text_table_pointer;
typedef void (__stdcall *SET_CHAR_TABLE)(const UINT Index, const UINT Pos);
extern SET_CHAR_TABLE set_char_table;
typedef UINT (__stdcall *GET_CHAR_POINTER)(const UINT Char);
extern GET_CHAR_POINTER get_char_pointer;
typedef UINT (__stdcall *GET_SUB_POINTER)(const UINT Index);
extern GET_SUB_POINTER get_sub_pointer;
typedef UINT (__stdcall *GET_TEXT_TABLE_POINTER)(const UINT Index);
extern GET_TEXT_TABLE_POINTER get_text_table_pointer;
typedef void (__stdcall *N_TIME_UPDATE)(const UINT CardNo);
extern N_TIME_UPDATE n_time_update;
typedef void (__stdcall *N_SET_SERIAL_STEP)(const UINT CardNo, const UINT No, const UINT Step);
extern N_SET_SERIAL_STEP n_set_serial_step;
typedef void (__stdcall *N_SET_SERIAL)(const UINT CardNo, const UINT No);
extern N_SET_SERIAL n_set_serial;
typedef double (__stdcall *N_GET_SERIAL)(const UINT CardNo);
extern N_GET_SERIAL n_get_serial;
typedef void (__stdcall *TIME_UPDATE)(void);
extern TIME_UPDATE time_update;
typedef void (__stdcall *SET_SERIAL_STEP)(const UINT No, const UINT Step);
extern SET_SERIAL_STEP set_serial_step;
typedef void (__stdcall *SET_SERIAL)(const UINT No);
extern SET_SERIAL set_serial;
typedef double (__stdcall *GET_SERIAL)(void);
extern GET_SERIAL get_serial;
typedef void (__stdcall *N_WRITE_IO_PORT_MASK)(const UINT CardNo, const UINT Value, const UINT Mask);
extern N_WRITE_IO_PORT_MASK n_write_io_port_mask;
typedef void (__stdcall *N_WRITE_8BIT_PORT)(const UINT CardNo, const UINT Value);
extern N_WRITE_8BIT_PORT n_write_8bit_port;
typedef UINT (__stdcall *N_READ_IO_PORT)(const UINT CardNo);
extern N_READ_IO_PORT n_read_io_port;
typedef UINT (__stdcall *N_READ_IO_PORT_BUFFER)(const UINT CardNo, const UINT Index, UINT* Value, long* XPos, long* YPos, UINT* Time);
extern N_READ_IO_PORT_BUFFER n_read_io_port_buffer;
typedef UINT (__stdcall *N_GET_IO_STATUS)(const UINT CardNo);
extern N_GET_IO_STATUS n_get_io_status;
typedef UINT (__stdcall *N_READ_ANALOG_IN)(const UINT CardNo);
extern N_READ_ANALOG_IN n_read_analog_in;
typedef void (__stdcall *N_WRITE_DA_X)(const UINT CardNo, const UINT x, const UINT Value);
extern N_WRITE_DA_X n_write_da_x;
typedef void (__stdcall *N_SET_LASER_OFF_DEFAULT)(const UINT CardNo, const UINT AnalogOut1, const UINT AnalogOut2, const UINT DigitalOut);
extern N_SET_LASER_OFF_DEFAULT n_set_laser_off_default;
typedef void (__stdcall *N_SET_PORT_DEFAULT)(const UINT CardNo, const UINT Port, const UINT Value);
extern N_SET_PORT_DEFAULT n_set_port_default;
typedef void (__stdcall *N_WRITE_IO_PORT)(const UINT CardNo, const UINT Value);
extern N_WRITE_IO_PORT n_write_io_port;
typedef void (__stdcall *N_WRITE_DA_1)(const UINT CardNo, const UINT Value);
extern N_WRITE_DA_1 n_write_da_1;
typedef void (__stdcall *N_WRITE_DA_2)(const UINT CardNo, const UINT Value);
extern N_WRITE_DA_2 n_write_da_2;
typedef void (__stdcall *WRITE_IO_PORT_MASK)(const UINT Value, const UINT Mask);
extern WRITE_IO_PORT_MASK write_io_port_mask;
typedef void (__stdcall *WRITE_8BIT_PORT)(const UINT Value);
extern WRITE_8BIT_PORT write_8bit_port;
typedef UINT (__stdcall *READ_IO_PORT)(void);
extern READ_IO_PORT read_io_port;
typedef UINT (__stdcall *READ_IO_PORT_BUFFER)(const UINT Index, UINT* Value, long* XPos, long* YPos, UINT* Time);
extern READ_IO_PORT_BUFFER read_io_port_buffer;
typedef UINT (__stdcall *GET_IO_STATUS)(void);
extern GET_IO_STATUS get_io_status;
typedef UINT (__stdcall *READ_ANALOG_IN)(void);
extern READ_ANALOG_IN read_analog_in;
typedef void (__stdcall *WRITE_DA_X)(const UINT x, const UINT Value);
extern WRITE_DA_X write_da_x;
typedef void (__stdcall *SET_LASER_OFF_DEFAULT)(const UINT AnalogOut1, const UINT AnalogOut2, const UINT DigitalOut);
extern SET_LASER_OFF_DEFAULT set_laser_off_default;
typedef void (__stdcall *SET_PORT_DEFAULT)(const UINT Port, const UINT Value);
extern SET_PORT_DEFAULT set_port_default;
typedef void (__stdcall *WRITE_IO_PORT)(const UINT Value);
extern WRITE_IO_PORT write_io_port;
typedef void (__stdcall *WRITE_DA_1)(const UINT Value);
extern WRITE_DA_1 write_da_1;
typedef void (__stdcall *WRITE_DA_2)(const UINT Value);
extern WRITE_DA_2 write_da_2;
typedef void (__stdcall *N_DISABLE_LASER)(const UINT CardNo);
extern N_DISABLE_LASER n_disable_laser;
typedef void (__stdcall *N_ENABLE_LASER)(const UINT CardNo);
extern N_ENABLE_LASER n_enable_laser;
typedef void (__stdcall *N_LASER_SIGNAL_ON)(const UINT CardNo);
extern N_LASER_SIGNAL_ON n_laser_signal_on;
typedef void (__stdcall *N_LASER_SIGNAL_OFF)(const UINT CardNo);
extern N_LASER_SIGNAL_OFF n_laser_signal_off;
typedef void (__stdcall *N_SET_STANDBY)(const UINT CardNo, const UINT HalfPeriod, const UINT PulseLength);
extern N_SET_STANDBY n_set_standby;
typedef void (__stdcall *N_SET_LASER_PULSES_CTRL)(const UINT CardNo, const UINT HalfPeriod, const UINT PulseLength);
extern N_SET_LASER_PULSES_CTRL n_set_laser_pulses_ctrl;
typedef void (__stdcall *N_SET_FIRSTPULSE_KILLER)(const UINT CardNo, const UINT Length);
extern N_SET_FIRSTPULSE_KILLER n_set_firstpulse_killer;
typedef void (__stdcall *N_SET_QSWITCH_DELAY)(const UINT CardNo, const UINT Delay);
extern N_SET_QSWITCH_DELAY n_set_qswitch_delay;
typedef void (__stdcall *N_SET_LASER_MODE)(const UINT CardNo, const UINT Mode);
extern N_SET_LASER_MODE n_set_laser_mode;
typedef void (__stdcall *N_SET_LASER_CONTROL)(const UINT CardNo, const UINT Ctrl);
extern N_SET_LASER_CONTROL n_set_laser_control;
typedef void (__stdcall *N_SET_LASER_PIN_OUT)(const UINT CardNo, const UINT Pins);
extern N_SET_LASER_PIN_OUT n_set_laser_pin_out;
typedef UINT (__stdcall *N_GET_LASER_PIN_IN)(const UINT CardNo);
extern N_GET_LASER_PIN_IN n_get_laser_pin_in;
typedef void (__stdcall *N_SET_SOFTSTART_LEVEL)(const UINT CardNo, const UINT Index, const UINT Level);
extern N_SET_SOFTSTART_LEVEL n_set_softstart_level;
typedef void (__stdcall *N_SET_SOFTSTART_MODE)(const UINT CardNo, const UINT Mode, const UINT Number, const UINT Delay);
extern N_SET_SOFTSTART_MODE n_set_softstart_mode;
typedef UINT (__stdcall *N_SET_AUTO_LASER_CONTROL)(const UINT CardNo, const UINT Ctrl, const UINT Value, const UINT Mode, const UINT MinValue, const UINT MaxValue);
extern N_SET_AUTO_LASER_CONTROL n_set_auto_laser_control;
typedef UINT (__stdcall *N_SET_AUTO_LASER_PARAMS)(const UINT CardNo, const UINT Ctrl, const UINT Value, const UINT MinValue, const UINT MaxValue);
extern N_SET_AUTO_LASER_PARAMS n_set_auto_laser_params;
typedef long (__stdcall *N_LOAD_AUTO_LASER_CONTROL)(const UINT CardNo, const char* Name, const UINT No);
extern N_LOAD_AUTO_LASER_CONTROL n_load_auto_laser_control;
typedef long (__stdcall *N_LOAD_POSITION_CONTROL)(const UINT CardNo, const char* Name, const UINT No);
extern N_LOAD_POSITION_CONTROL n_load_position_control;
typedef void (__stdcall *N_SET_DEFAULT_PIXEL)(const UINT CardNo, const UINT PulseLength);
extern N_SET_DEFAULT_PIXEL n_set_default_pixel;
typedef void (__stdcall *N_GET_STANDBY)(const UINT CardNo, UINT* HalfPeriod, UINT* PulseLength);
extern N_GET_STANDBY n_get_standby;
typedef void (__stdcall *N_SET_PULSE_PICKING)(const UINT CardNo, const UINT No);
extern N_SET_PULSE_PICKING n_set_pulse_picking;
typedef void (__stdcall *N_SET_PULSE_PICKING_LENGTH)(const UINT CardNo, const UINT Length);
extern N_SET_PULSE_PICKING_LENGTH n_set_pulse_picking_length;
typedef void (__stdcall *N_CONFIG_LASER_SIGNALS)(const UINT CardNo, const UINT Config);
extern N_CONFIG_LASER_SIGNALS n_config_laser_signals;
typedef void (__stdcall *DISABLE_LASER)(void);
extern DISABLE_LASER disable_laser;
typedef void (__stdcall *ENABLE_LASER)(void);
extern ENABLE_LASER enable_laser;
typedef void (__stdcall *LASER_SIGNAL_ON)(void);
extern LASER_SIGNAL_ON laser_signal_on;
typedef void (__stdcall *LASER_SIGNAL_OFF)(void);
extern LASER_SIGNAL_OFF laser_signal_off;
typedef void (__stdcall *SET_STANDBY)(const UINT HalfPeriod, const UINT PulseLength);
extern SET_STANDBY set_standby;
typedef void (__stdcall *SET_LASER_PULSES_CTRL)(const UINT HalfPeriod, const UINT PulseLength);
extern SET_LASER_PULSES_CTRL set_laser_pulses_ctrl;
typedef void (__stdcall *SET_FIRSTPULSE_KILLER)(const UINT Length);
extern SET_FIRSTPULSE_KILLER set_firstpulse_killer;
typedef void (__stdcall *SET_QSWITCH_DELAY)(const UINT Delay);
extern SET_QSWITCH_DELAY set_qswitch_delay;
typedef void (__stdcall *SET_LASER_MODE)(const UINT Mode);
extern SET_LASER_MODE set_laser_mode;
typedef void (__stdcall *SET_LASER_CONTROL)(const UINT Ctrl);
extern SET_LASER_CONTROL set_laser_control;
typedef void (__stdcall *SET_LASER_PIN_OUT)(const UINT Pins);
extern SET_LASER_PIN_OUT set_laser_pin_out;
typedef UINT (__stdcall *GET_LASER_PIN_IN)(void);
extern GET_LASER_PIN_IN get_laser_pin_in;
typedef void (__stdcall *SET_SOFTSTART_LEVEL)(const UINT Index, const UINT Level);
extern SET_SOFTSTART_LEVEL set_softstart_level;
typedef void (__stdcall *SET_SOFTSTART_MODE)(const UINT Mode, const UINT Number, const UINT Delay);
extern SET_SOFTSTART_MODE set_softstart_mode;
typedef UINT (__stdcall *SET_AUTO_LASER_CONTROL)(const UINT Ctrl, const UINT Value, const UINT Mode, const UINT MinValue, const UINT MaxValue);
extern SET_AUTO_LASER_CONTROL set_auto_laser_control;
typedef UINT (__stdcall *SET_AUTO_LASER_PARAMS)(const UINT Ctrl, const UINT Value, const UINT MinValue, const UINT MaxValue);
extern SET_AUTO_LASER_PARAMS set_auto_laser_params;
typedef long (__stdcall *LOAD_AUTO_LASER_CONTROL)(const char* Name, const UINT No);
extern LOAD_AUTO_LASER_CONTROL load_auto_laser_control;
typedef long (__stdcall *LOAD_POSITION_CONTROL)(const char* Name, const UINT No);
extern LOAD_POSITION_CONTROL load_position_control;
typedef void (__stdcall *SET_DEFAULT_PIXEL)(const UINT PulseLength);
extern SET_DEFAULT_PIXEL set_default_pixel;
typedef void (__stdcall *GET_STANDBY)(UINT* HalfPeriod, UINT* PulseLength);
extern GET_STANDBY get_standby;
typedef void (__stdcall *SET_PULSE_PICKING)(const UINT No);
extern SET_PULSE_PICKING set_pulse_picking;
typedef void (__stdcall *SET_PULSE_PICKING_LENGTH)(const UINT Length);
extern SET_PULSE_PICKING_LENGTH set_pulse_picking_length;
typedef void (__stdcall *CONFIG_LASER_SIGNALS)(const UINT Config);
extern CONFIG_LASER_SIGNALS config_laser_signals;
typedef void (__stdcall *N_SET_EXT_START_DELAY)(const UINT CardNo, const long Delay, const UINT EncoderNo);
extern N_SET_EXT_START_DELAY n_set_ext_start_delay;
typedef void (__stdcall *N_SET_ROT_CENTER)(const UINT CardNo, const long X, const long Y);
extern N_SET_ROT_CENTER n_set_rot_center;
typedef void (__stdcall *N_SIMULATE_ENCODER)(const UINT CardNo, const UINT EncoderNo);
extern N_SIMULATE_ENCODER n_simulate_encoder;
typedef UINT (__stdcall *N_GET_MARKING_INFO)(const UINT CardNo);
extern N_GET_MARKING_INFO n_get_marking_info;
typedef void (__stdcall *N_SET_ENCODER_SPEED_CTRL)(const UINT CardNo, const UINT EncoderNo, const double Speed, const double Smooth);
extern N_SET_ENCODER_SPEED_CTRL n_set_encoder_speed_ctrl;
typedef void (__stdcall *N_SET_MCBSP_X)(const UINT CardNo, const double ScaleX);
extern N_SET_MCBSP_X n_set_mcbsp_x;
typedef void (__stdcall *N_SET_MCBSP_Y)(const UINT CardNo, const double ScaleY);
extern N_SET_MCBSP_Y n_set_mcbsp_y;
typedef void (__stdcall *N_SET_MCBSP_ROT)(const UINT CardNo, const double Resolution);
extern N_SET_MCBSP_ROT n_set_mcbsp_rot;
typedef void (__stdcall *N_SET_MCBSP_MATRIX)(const UINT CardNo);
extern N_SET_MCBSP_MATRIX n_set_mcbsp_matrix;
typedef void (__stdcall *N_SET_MCBSP_IN)(const UINT CardNo, const UINT Mode, const double Scale);
extern N_SET_MCBSP_IN n_set_mcbsp_in;
typedef void (__stdcall *N_SET_FLY_TRACKING_ERROR)(const UINT CardNo, const UINT TrackingErrorX, const UINT TrackingErrorY);
extern N_SET_FLY_TRACKING_ERROR n_set_fly_tracking_error;
typedef long (__stdcall *N_LOAD_FLY_2D_TABLE)(const UINT CardNo, const char* Name, const UINT No);
extern N_LOAD_FLY_2D_TABLE n_load_fly_2d_table;
typedef void (__stdcall *N_INIT_FLY_2D)(const UINT CardNo, const long OffsetX, const long OffsetY);
extern N_INIT_FLY_2D n_init_fly_2d;
typedef void (__stdcall *N_GET_FLY_2D_OFFSET)(const UINT CardNo, long* OffsetX, long* OffsetY);
extern N_GET_FLY_2D_OFFSET n_get_fly_2d_offset;
typedef void (__stdcall *N_GET_ENCODER)(const UINT CardNo, long* Encoder0, long* Encoder1);
extern N_GET_ENCODER n_get_encoder;
typedef void (__stdcall *N_READ_ENCODER)(const UINT CardNo, long* Encoder0_1, long* Encoder1_1, long* Encoder0_2, long* Encoder1_2);
extern N_READ_ENCODER n_read_encoder;
typedef long (__stdcall *N_GET_MCBSP)(const UINT CardNo);
extern N_GET_MCBSP n_get_mcbsp;
typedef long (__stdcall *N_READ_MCBSP)(const UINT CardNo, const UINT No);
extern N_READ_MCBSP n_read_mcbsp;
typedef void (__stdcall *SET_EXT_START_DELAY)(const long Delay, const UINT EncoderNo);
extern SET_EXT_START_DELAY set_ext_start_delay;
typedef void (__stdcall *SET_ROT_CENTER)(const long X, const long Y);
extern SET_ROT_CENTER set_rot_center;
typedef void (__stdcall *SIMULATE_ENCODER)(const UINT EncoderNo);
extern SIMULATE_ENCODER simulate_encoder;
typedef UINT (__stdcall *GET_MARKING_INFO)(void);
extern GET_MARKING_INFO get_marking_info;
typedef void (__stdcall *SET_ENCODER_SPEED_CTRL)(const UINT EncoderNo, const double Speed, const double Smooth);
extern SET_ENCODER_SPEED_CTRL set_encoder_speed_ctrl;
typedef void (__stdcall *SET_MCBSP_X)(const double ScaleX);
extern SET_MCBSP_X set_mcbsp_x;
typedef void (__stdcall *SET_MCBSP_Y)(const double ScaleY);
extern SET_MCBSP_Y set_mcbsp_y;
typedef void (__stdcall *SET_MCBSP_ROT)(const double Resolution);
extern SET_MCBSP_ROT set_mcbsp_rot;
typedef void (__stdcall *SET_MCBSP_MATRIX)(void);
extern SET_MCBSP_MATRIX set_mcbsp_matrix;
typedef void (__stdcall *SET_MCBSP_IN)(const UINT Mode, const double Scale);
extern SET_MCBSP_IN set_mcbsp_in;
typedef void (__stdcall *SET_FLY_TRACKING_ERROR)(const UINT TrackingErrorX, const UINT TrackingErrorY);
extern SET_FLY_TRACKING_ERROR set_fly_tracking_error;
typedef long (__stdcall *LOAD_FLY_2D_TABLE)(const char* Name, const UINT No);
extern LOAD_FLY_2D_TABLE load_fly_2d_table;
typedef void (__stdcall *INIT_FLY_2D)(const long OffsetX, const long OffsetY);
extern INIT_FLY_2D init_fly_2d;
typedef void (__stdcall *GET_FLY_2D_OFFSET)(long* OffsetX, long* OffsetY);
extern GET_FLY_2D_OFFSET get_fly_2d_offset;
typedef void (__stdcall *GET_ENCODER)(long* Encoder0, long* Encoder1);
extern GET_ENCODER get_encoder;
typedef void (__stdcall *READ_ENCODER)(long* Encoder0_1, long* Encoder1_1, long* Encoder0_2, long* Encoder1_2);
extern READ_ENCODER read_encoder;
typedef long (__stdcall *GET_MCBSP)(void);
extern GET_MCBSP get_mcbsp;
typedef long (__stdcall *READ_MCBSP)(const UINT No);
extern READ_MCBSP read_mcbsp;
typedef double (__stdcall *N_GET_TIME)(const UINT CardNo);
extern N_GET_TIME n_get_time;
typedef void (__stdcall *N_MEASUREMENT_STATUS)(const UINT CardNo, UINT* Busy, UINT* Pos);
extern N_MEASUREMENT_STATUS n_measurement_status;
typedef void (__stdcall *N_GET_WAVEFORM)(const UINT CardNo, const UINT Channel, const UINT Number, const ULONG_PTR Ptr);
extern N_GET_WAVEFORM n_get_waveform;
typedef void (__stdcall *N_BOUNCE_SUPP)(const UINT CardNo, const UINT Length);
extern N_BOUNCE_SUPP n_bounce_supp;
typedef void (__stdcall *N_HOME_POSITION_XYZ)(const UINT CardNo, const long XHome, const long YHome, const long ZHome);
extern N_HOME_POSITION_XYZ n_home_position_xyz;
typedef void (__stdcall *N_HOME_POSITION)(const UINT CardNo, const long XHome, const long YHome);
extern N_HOME_POSITION n_home_position;
typedef void (__stdcall *N_RS232_CONFIG)(const UINT CardNo, const UINT BaudRate);
extern N_RS232_CONFIG n_rs232_config;
typedef void (__stdcall *N_RS232_WRITE_DATA)(const UINT CardNo, const UINT Data);
extern N_RS232_WRITE_DATA n_rs232_write_data;
typedef void (__stdcall *N_RS232_WRITE_TEXT)(const UINT CardNo, const char* pData);
extern N_RS232_WRITE_TEXT n_rs232_write_text;
typedef UINT (__stdcall *N_RS232_READ_DATA)(const UINT CardNo);
extern N_RS232_READ_DATA n_rs232_read_data;
typedef UINT (__stdcall *N_SET_MCBSP_FREQ)(const UINT CardNo, const UINT Freq);
extern N_SET_MCBSP_FREQ n_set_mcbsp_freq;
typedef void (__stdcall *N_MCBSP_INIT)(const UINT CardNo, const UINT XDelay, const UINT RDelay);
extern N_MCBSP_INIT n_mcbsp_init;
typedef UINT (__stdcall *N_GET_OVERRUN)(const UINT CardNo);
extern N_GET_OVERRUN n_get_overrun;
typedef UINT (__stdcall *N_GET_MASTER_SLAVE)(const UINT CardNo);
extern N_GET_MASTER_SLAVE n_get_master_slave;
typedef void (__stdcall *N_GET_TRANSFORM)(const UINT CardNo, const UINT Number, const ULONG_PTR Ptr1, const ULONG_PTR Ptr2, const ULONG_PTR Ptr, const UINT Code);
extern N_GET_TRANSFORM n_get_transform;
typedef void (__stdcall *N_STOP_TRIGGER)(const UINT CardNo);
extern N_STOP_TRIGGER n_stop_trigger;
typedef void (__stdcall *N_MOVE_TO)(const UINT CardNo, const UINT Pos);
extern N_MOVE_TO n_move_to;
typedef void (__stdcall *N_SET_ENDURING_WOBBEL)(const UINT CardNo, const UINT CenterX, const UINT CenterY, const UINT CenterZ, const UINT LimitHi, const UINT LimitLo, const double ScaleX, const double ScaleY, const double ScaleZ);
extern N_SET_ENDURING_WOBBEL n_set_enduring_wobbel;
typedef void (__stdcall *N_SET_FREE_VARIABLE)(const UINT CardNo, const UINT VarNo, const UINT Value);
extern N_SET_FREE_VARIABLE n_set_free_variable;
typedef UINT (__stdcall *N_GET_FREE_VARIABLE)(const UINT CardNo, const UINT VarNo);
extern N_GET_FREE_VARIABLE n_get_free_variable;
typedef void (__stdcall *N_SET_MCBSP_OUT_PTR)(const UINT CardNo, const UINT Number, const ULONG_PTR SignalPtr);
extern N_SET_MCBSP_OUT_PTR n_set_mcbsp_out_ptr;
typedef double (__stdcall *GET_TIME)(void);
extern GET_TIME get_time;
typedef void (__stdcall *MEASUREMENT_STATUS)(UINT* Busy, UINT* Pos);
extern MEASUREMENT_STATUS measurement_status;
typedef void (__stdcall *GET_WAVEFORM)(const UINT Channel, const UINT Number, const ULONG_PTR Ptr);
extern GET_WAVEFORM get_waveform;
typedef void (__stdcall *BOUNCE_SUPP)(const UINT Length);
extern BOUNCE_SUPP bounce_supp;
typedef void (__stdcall *HOME_POSITION_XYZ)(const long XHome, const long YHome, const long ZHome);
extern HOME_POSITION_XYZ home_position_xyz;
typedef void (__stdcall *HOME_POSITION)(const long XHome, const long YHome);
extern HOME_POSITION home_position;
typedef void (__stdcall *RS232_CONFIG)(const UINT BaudRate);
extern RS232_CONFIG rs232_config;
typedef void (__stdcall *RS232_WRITE_DATA)(const UINT Data);
extern RS232_WRITE_DATA rs232_write_data;
typedef void (__stdcall *RS232_WRITE_TEXT)(const char* pData);
extern RS232_WRITE_TEXT rs232_write_text;
typedef UINT (__stdcall *RS232_READ_DATA)(void);
extern RS232_READ_DATA rs232_read_data;
typedef UINT (__stdcall *SET_MCBSP_FREQ)(const UINT Freq);
extern SET_MCBSP_FREQ set_mcbsp_freq;
typedef void (__stdcall *MCBSP_INIT)(const UINT XDelay, const UINT RDelay);
extern MCBSP_INIT mcbsp_init;
typedef UINT (__stdcall *GET_OVERRUN)(void);
extern GET_OVERRUN get_overrun;
typedef UINT (__stdcall *GET_MASTER_SLAVE)(void);
extern GET_MASTER_SLAVE get_master_slave;
typedef void (__stdcall *GET_TRANSFORM)(const UINT Number, const ULONG_PTR Ptr1, const ULONG_PTR Ptr2, const ULONG_PTR Ptr, const UINT Code);
extern GET_TRANSFORM get_transform;
typedef void (__stdcall *STOP_TRIGGER)(void);
extern STOP_TRIGGER stop_trigger;
typedef void (__stdcall *MOVE_TO)(const UINT Pos);
extern MOVE_TO move_to;
typedef void (__stdcall *SET_ENDURING_WOBBEL)(const UINT CenterX, const UINT CenterY, const UINT CenterZ, const UINT LimitHi, const UINT LimitLo, const double ScaleX, const double ScaleY, const double ScaleZ);
extern SET_ENDURING_WOBBEL set_enduring_wobbel;
typedef void (__stdcall *SET_FREE_VARIABLE)(const UINT VarNo, const UINT Value);
extern SET_FREE_VARIABLE set_free_variable;
typedef UINT (__stdcall *GET_FREE_VARIABLE)(const UINT VarNo);
extern GET_FREE_VARIABLE get_free_variable;
typedef void (__stdcall *SET_MCBSP_OUT_PTR)(const UINT Number, const ULONG_PTR SignalPtr);
extern SET_MCBSP_OUT_PTR set_mcbsp_out_ptr;
typedef void (__stdcall *N_SET_DEFOCUS)(const UINT CardNo, const long Shift);
extern N_SET_DEFOCUS n_set_defocus;
typedef void (__stdcall *N_GOTO_XYZ)(const UINT CardNo, const long X, const long Y, const long Z);
extern N_GOTO_XYZ n_goto_xyz;
typedef void (__stdcall *N_GOTO_XY)(const UINT CardNo, const long X, const long Y);
extern N_GOTO_XY n_goto_xy;
typedef long (__stdcall *N_GET_Z_DISTANCE)(const UINT CardNo, const long X, const long Y, const long Z);
extern N_GET_Z_DISTANCE n_get_z_distance;
typedef void (__stdcall *SET_DEFOCUS)(const long Shift);
extern SET_DEFOCUS set_defocus;
typedef void (__stdcall *GOTO_XYZ)(const long X, const long Y, const long Z);
extern GOTO_XYZ goto_xyz;
typedef void (__stdcall *GOTO_XY)(const long X, const long Y);
extern GOTO_XY goto_xy;
typedef long (__stdcall *GET_Z_DISTANCE)(const long X, const long Y, const long Z);
extern GET_Z_DISTANCE get_z_distance;
typedef void (__stdcall *N_SET_OFFSET_XYZ)(const UINT CardNo, const UINT HeadNo, const long XOffset, const long YOffset, const long ZOffset, const UINT at_once);
extern N_SET_OFFSET_XYZ n_set_offset_xyz;
typedef void (__stdcall *N_SET_OFFSET)(const UINT CardNo, const UINT HeadNo, const long XOffset, const long YOffset, const UINT at_once);
extern N_SET_OFFSET n_set_offset;
typedef void (__stdcall *N_SET_MATRIX)(const UINT CardNo, const UINT HeadNo, const double M11, const double M12, const double M21, const double M22, const UINT at_once);
extern N_SET_MATRIX n_set_matrix;
typedef void (__stdcall *N_SET_ANGLE)(const UINT CardNo, const UINT HeadNo, const double Angle, const UINT at_once);
extern N_SET_ANGLE n_set_angle;
typedef void (__stdcall *N_SET_SCALE)(const UINT CardNo, const UINT HeadNo, const double Scale, const UINT at_once);
extern N_SET_SCALE n_set_scale;
typedef void (__stdcall *N_APPLY_MCBSP)(const UINT CardNo, const UINT HeadNo, const UINT at_once);
extern N_APPLY_MCBSP n_apply_mcbsp;
typedef UINT (__stdcall *N_UPLOAD_TRANSFORM)(const UINT CardNo, const UINT HeadNo, const ULONG_PTR Ptr);
extern N_UPLOAD_TRANSFORM n_upload_transform;
typedef void (__stdcall *SET_OFFSET_XYZ)(const UINT HeadNo, const long XOffset, const long YOffset, const long ZOffset, const UINT at_once);
extern SET_OFFSET_XYZ set_offset_xyz;
typedef void (__stdcall *SET_OFFSET)(const UINT HeadNo, const long XOffset, const long YOffset, const UINT at_once);
extern SET_OFFSET set_offset;
typedef void (__stdcall *SET_MATRIX)(const UINT HeadNo, const double M11, const double M12, const double M21, const double M22, const UINT at_once);
extern SET_MATRIX set_matrix;
typedef void (__stdcall *SET_ANGLE)(const UINT HeadNo, const double Angle, const UINT at_once);
extern SET_ANGLE set_angle;
typedef void (__stdcall *SET_SCALE)(const UINT HeadNo, const double Scale, const UINT at_once);
extern SET_SCALE set_scale;
typedef void (__stdcall *APPLY_MCBSP)(const UINT HeadNo, const UINT at_once);
extern APPLY_MCBSP apply_mcbsp;
typedef UINT (__stdcall *UPLOAD_TRANSFORM)(const UINT HeadNo, const ULONG_PTR Ptr);
extern UPLOAD_TRANSFORM upload_transform;
typedef UINT (__stdcall *TRANSFORM)(long* Sig1, long* Sig2, const ULONG_PTR Ptr, const UINT Code);
extern TRANSFORM transform;
typedef void (__stdcall *N_SET_DELAY_MODE)(const UINT CardNo, const UINT VarPoly, const UINT DirectMove3D, const UINT EdgeLevel, const UINT MinJumpDelay, const UINT JumpLengthLimit);
extern N_SET_DELAY_MODE n_set_delay_mode;
typedef void (__stdcall *N_SET_JUMP_SPEED_CTRL)(const UINT CardNo, const double Speed);
extern N_SET_JUMP_SPEED_CTRL n_set_jump_speed_ctrl;
typedef void (__stdcall *N_SET_MARK_SPEED_CTRL)(const UINT CardNo, const double Speed);
extern N_SET_MARK_SPEED_CTRL n_set_mark_speed_ctrl;
typedef void (__stdcall *N_SET_SKY_WRITING_PARA)(const UINT CardNo, const double Timelag, const long LaserOnShift, const UINT Nprev, const UINT Npost);
extern N_SET_SKY_WRITING_PARA n_set_sky_writing_para;
typedef void (__stdcall *N_SET_SKY_WRITING_LIMIT)(const UINT CardNo, const double CosAngle);
extern N_SET_SKY_WRITING_LIMIT n_set_sky_writing_limit;
typedef void (__stdcall *N_SET_SKY_WRITING_MODE)(const UINT CardNo, const UINT Mode);
extern N_SET_SKY_WRITING_MODE n_set_sky_writing_mode;
typedef long (__stdcall *N_LOAD_VARPOLYDELAY)(const UINT CardNo, const char* Name, const UINT No);
extern N_LOAD_VARPOLYDELAY n_load_varpolydelay;
typedef void (__stdcall *N_SET_HI)(const UINT CardNo, const UINT HeadNo, const double GalvoGainX, const double GalvoGainY, const long GalvoOffsetX, const long GalvoOffsetY);
extern N_SET_HI n_set_hi;
typedef void (__stdcall *N_GET_HI_POS)(const UINT CardNo, const UINT HeadNo, long* X1, long* X2, long* Y1, long* Y2);
extern N_GET_HI_POS n_get_hi_pos;
typedef UINT (__stdcall *N_AUTO_CAL)(const UINT CardNo, const UINT HeadNo, const UINT Command);
extern N_AUTO_CAL n_auto_cal;
typedef UINT (__stdcall *N_GET_AUTO_CAL)(const UINT CardNo, const UINT HeadNo);
extern N_GET_AUTO_CAL n_get_auto_cal;
typedef void (__stdcall *N_SET_SKY_WRITING)(const UINT CardNo, const double Timelag, const long LaserOnShift);
extern N_SET_SKY_WRITING n_set_sky_writing;
typedef void (__stdcall *N_GET_HI_DATA)(const UINT CardNo, long* X1, long* X2, long* Y1, long* Y2);
extern N_GET_HI_DATA n_get_hi_data;
typedef void (__stdcall *SET_DELAY_MODE)(const UINT VarPoly, const UINT DirectMove3D, const UINT EdgeLevel, const UINT MinJumpDelay, const UINT JumpLengthLimit);
extern SET_DELAY_MODE set_delay_mode;
typedef void (__stdcall *SET_JUMP_SPEED_CTRL)(const double Speed);
extern SET_JUMP_SPEED_CTRL set_jump_speed_ctrl;
typedef void (__stdcall *SET_MARK_SPEED_CTRL)(const double Speed);
extern SET_MARK_SPEED_CTRL set_mark_speed_ctrl;
typedef void (__stdcall *SET_SKY_WRITING_PARA)(const double Timelag, const long LaserOnShift, const UINT Nprev, const UINT Npost);
extern SET_SKY_WRITING_PARA set_sky_writing_para;
typedef void (__stdcall *SET_SKY_WRITING_LIMIT)(const double CosAngle);
extern SET_SKY_WRITING_LIMIT set_sky_writing_limit;
typedef void (__stdcall *SET_SKY_WRITING_MODE)(const UINT Mode);
extern SET_SKY_WRITING_MODE set_sky_writing_mode;
typedef long (__stdcall *LOAD_VARPOLYDELAY)(const char* Name, const UINT No);
extern LOAD_VARPOLYDELAY load_varpolydelay;
typedef void (__stdcall *SET_HI)(const UINT HeadNo, const double GalvoGainX, const double GalvoGainY, const long GalvoOffsetX, const long GalvoOffsetY);
extern SET_HI set_hi;
typedef void (__stdcall *GET_HI_POS)(const UINT HeadNo, long* X1, long* X2, long* Y1, long* Y2);
extern GET_HI_POS get_hi_pos;
typedef UINT (__stdcall *AUTO_CAL)(const UINT HeadNo, const UINT Command);
extern AUTO_CAL auto_cal;
typedef UINT (__stdcall *GET_AUTO_CAL)(const UINT HeadNo);
extern GET_AUTO_CAL get_auto_cal;
typedef void (__stdcall *SET_SKY_WRITING)(const double Timelag, const long LaserOnShift);
extern SET_SKY_WRITING set_sky_writing;
typedef void (__stdcall *GET_HI_DATA)(long* X1, long* X2, long* Y1, long* Y2);
extern GET_HI_DATA get_hi_data;
typedef void (__stdcall *N_SEND_USER_DATA)(const UINT CardNo, const UINT Head, const UINT Axis, const long Data0, const long Data1, const long Data2, const long Data3, const long Data4);
extern N_SEND_USER_DATA n_send_user_data;
typedef long (__stdcall *N_READ_USER_DATA)(const UINT CardNo, const UINT Head, const UINT Axis, long* Data0, long* Data1, long* Data2, long* Data3, long* Data4);
extern N_READ_USER_DATA n_read_user_data;
typedef void (__stdcall *N_CONTROL_COMMAND)(const UINT CardNo, const UINT Head, const UINT Axis, const UINT Data);
extern N_CONTROL_COMMAND n_control_command;
typedef long (__stdcall *N_GET_VALUE)(const UINT CardNo, const UINT Signal);
extern N_GET_VALUE n_get_value;
typedef void (__stdcall *N_GET_VALUES)(const UINT CardNo, const ULONG_PTR SignalPtr, const ULONG_PTR ResultPtr);
extern N_GET_VALUES n_get_values;
typedef UINT (__stdcall *N_GET_HEAD_STATUS)(const UINT CardNo, const UINT Head);
extern N_GET_HEAD_STATUS n_get_head_status;
typedef long (__stdcall *N_SET_JUMP_MODE)(const UINT CardNo, const long Flag, const UINT Length, const long VA1, const long VA2, const long VB1, const long VB2, const long JA1, const long JA2, const long JB1, const long JB2);
extern N_SET_JUMP_MODE n_set_jump_mode;
typedef long (__stdcall *N_LOAD_JUMP_TABLE_OFFSET)(const UINT CardNo, const char* Name, const UINT No, const UINT PosAck, const long Offset, const UINT MinDelay, const UINT MaxDelay, const UINT ListPos);
extern N_LOAD_JUMP_TABLE_OFFSET n_load_jump_table_offset;
typedef UINT (__stdcall *N_GET_JUMP_TABLE)(const UINT CardNo, const ULONG_PTR Ptr);
extern N_GET_JUMP_TABLE n_get_jump_table;
typedef UINT (__stdcall *N_SET_JUMP_TABLE)(const UINT CardNo, const ULONG_PTR Ptr);
extern N_SET_JUMP_TABLE n_set_jump_table;
typedef long (__stdcall *N_LOAD_JUMP_TABLE)(const UINT CardNo, const char* Name, const UINT No, const UINT PosAck, const UINT MinDelay, const UINT MaxDelay, const UINT ListPos);
extern N_LOAD_JUMP_TABLE n_load_jump_table;
typedef void (__stdcall *SEND_USER_DATA)(const UINT Head, const UINT Axis, const long Data0, const long Data1, const long Data2, const long Data3, const long Data4);
extern SEND_USER_DATA send_user_data;
typedef long (__stdcall *READ_USER_DATA)(const UINT Head, const UINT Axis, long* Data0, long* Data1, long* Data2, long* Data3, long* Data4);
extern READ_USER_DATA read_user_data;
typedef void (__stdcall *CONTROL_COMMAND)(const UINT Head, const UINT Axis, const UINT Data);
extern CONTROL_COMMAND control_command;
typedef long (__stdcall *GET_VALUE)(const UINT Signal);
extern GET_VALUE get_value;
typedef void (__stdcall *GET_VALUES)(const ULONG_PTR SignalPtr, const ULONG_PTR ResultPtr);
extern GET_VALUES get_values;
typedef UINT (__stdcall *GET_HEAD_STATUS)(const UINT Head);
extern GET_HEAD_STATUS get_head_status;
typedef long (__stdcall *SET_JUMP_MODE)(const long Flag, const UINT Length, const long VA1, const long VA2, const long VB1, const long VB2, const long JA1, const long JA2, const long JB1, const long JB2);
extern SET_JUMP_MODE set_jump_mode;
typedef long (__stdcall *LOAD_JUMP_TABLE_OFFSET)(const char* Name, const UINT No, const UINT PosAck, const long Offset, const UINT MinDelay, const UINT MaxDelay, const UINT ListPos);
extern LOAD_JUMP_TABLE_OFFSET load_jump_table_offset;
typedef UINT (__stdcall *GET_JUMP_TABLE)(const ULONG_PTR Ptr);
extern GET_JUMP_TABLE get_jump_table;
typedef UINT (__stdcall *SET_JUMP_TABLE)(const ULONG_PTR Ptr);
extern SET_JUMP_TABLE set_jump_table;
typedef long (__stdcall *LOAD_JUMP_TABLE)(const char* Name, const UINT No, const UINT PosAck, const UINT MinDelay, const UINT MaxDelay, const UINT ListPos);
extern LOAD_JUMP_TABLE load_jump_table;
typedef void (__stdcall *N_STEPPER_INIT)(const UINT CardNo, const UINT No, const UINT Period, const long Dir, const long Pos, const UINT Tol, const UINT Enable, const UINT WaitTime);
extern N_STEPPER_INIT n_stepper_init;
typedef void (__stdcall *N_STEPPER_ENABLE)(const UINT CardNo, const long Enable1, const long Enable2);
extern N_STEPPER_ENABLE n_stepper_enable;
typedef void (__stdcall *N_STEPPER_CONTROL)(const UINT CardNo, const long Period1, const long Period2);
extern N_STEPPER_CONTROL n_stepper_control;
typedef void (__stdcall *N_STEPPER_ABS_NO)(const UINT CardNo, const UINT No, const long Pos, const UINT WaitTime);
extern N_STEPPER_ABS_NO n_stepper_abs_no;
typedef void (__stdcall *N_STEPPER_REL_NO)(const UINT CardNo, const UINT No, const long dPos, const UINT WaitTime);
extern N_STEPPER_REL_NO n_stepper_rel_no;
typedef void (__stdcall *N_STEPPER_ABS)(const UINT CardNo, const long Pos1, const long Pos2, const UINT WaitTime);
extern N_STEPPER_ABS n_stepper_abs;
typedef void (__stdcall *N_STEPPER_REL)(const UINT CardNo, const long dPos1, const long dPos2, const UINT WaitTime);
extern N_STEPPER_REL n_stepper_rel;
typedef void (__stdcall *N_GET_STEPPER_STATUS)(const UINT CardNo, UINT* Status1, long* Pos1, UINT* Status2, long* Pos2);
extern N_GET_STEPPER_STATUS n_get_stepper_status;
typedef void (__stdcall *STEPPER_INIT)(const UINT No, const UINT Period, const long Dir, const long Pos, const UINT Tol, const UINT Enable, const UINT WaitTime);
extern STEPPER_INIT stepper_init;
typedef void (__stdcall *STEPPER_ENABLE)(const long Enable1, const long Enable2);
extern STEPPER_ENABLE stepper_enable;
typedef void (__stdcall *STEPPER_CONTROL)(const long Period1, const long Period2);
extern STEPPER_CONTROL stepper_control;
typedef void (__stdcall *STEPPER_ABS_NO)(const UINT No, const long Pos, const UINT WaitTime);
extern STEPPER_ABS_NO stepper_abs_no;
typedef void (__stdcall *STEPPER_REL_NO)(const UINT No, const long dPos, const UINT WaitTime);
extern STEPPER_REL_NO stepper_rel_no;
typedef void (__stdcall *STEPPER_ABS)(const long Pos1, const long Pos2, const UINT WaitTime);
extern STEPPER_ABS stepper_abs;
typedef void (__stdcall *STEPPER_REL)(const long dPos1, const long dPos2, const UINT WaitTime);
extern STEPPER_REL stepper_rel;
typedef void (__stdcall *GET_STEPPER_STATUS)(UINT* Status1, long* Pos1, UINT* Status2, long* Pos2);
extern GET_STEPPER_STATUS get_stepper_status;
typedef void (__stdcall *N_SELECT_COR_TABLE_LIST)(const UINT CardNo, const UINT HeadA, const UINT HeadB);
extern N_SELECT_COR_TABLE_LIST n_select_cor_table_list;
typedef void (__stdcall *SELECT_COR_TABLE_LIST)(const UINT HeadA, const UINT HeadB);
extern SELECT_COR_TABLE_LIST select_cor_table_list;
typedef void (__stdcall *N_LIST_NOP)(const UINT CardNo);
extern N_LIST_NOP n_list_nop;
typedef void (__stdcall *N_LIST_CONTINUE)(const UINT CardNo);
extern N_LIST_CONTINUE n_list_continue;
typedef void (__stdcall *N_LONG_DELAY)(const UINT CardNo, const UINT Delay);
extern N_LONG_DELAY n_long_delay;
typedef void (__stdcall *N_SET_END_OF_LIST)(const UINT CardNo);
extern N_SET_END_OF_LIST n_set_end_of_list;
typedef void (__stdcall *N_SET_WAIT)(const UINT CardNo, const UINT WaitWord);
extern N_SET_WAIT n_set_wait;
typedef void (__stdcall *N_LIST_JUMP_POS)(const UINT CardNo, const UINT Pos);
extern N_LIST_JUMP_POS n_list_jump_pos;
typedef void (__stdcall *N_LIST_JUMP_REL)(const UINT CardNo, const long Pos);
extern N_LIST_JUMP_REL n_list_jump_rel;
typedef void (__stdcall *N_LIST_REPEAT)(const UINT CardNo);
extern N_LIST_REPEAT n_list_repeat;
typedef void (__stdcall *N_LIST_UNTIL)(const UINT CardNo, const UINT Number);
extern N_LIST_UNTIL n_list_until;
typedef void (__stdcall *N_SET_LIST_JUMP)(const UINT CardNo, const UINT Pos);
extern N_SET_LIST_JUMP n_set_list_jump;
typedef void (__stdcall *LIST_NOP)(void);
extern LIST_NOP list_nop;
typedef void (__stdcall *LIST_CONTINUE)(void);
extern LIST_CONTINUE list_continue;
typedef void (__stdcall *LONG_DELAY)(const UINT Delay);
extern LONG_DELAY long_delay;
typedef void (__stdcall *SET_END_OF_LIST)(void);
extern SET_END_OF_LIST set_end_of_list;
typedef void (__stdcall *SET_WAIT)(const UINT WaitWord);
extern SET_WAIT set_wait;
typedef void (__stdcall *LIST_JUMP_POS)(const UINT Pos);
extern LIST_JUMP_POS list_jump_pos;
typedef void (__stdcall *LIST_JUMP_REL)(const long Pos);
extern LIST_JUMP_REL list_jump_rel;
typedef void (__stdcall *LIST_REPEAT)(void);
extern LIST_REPEAT list_repeat;
typedef void (__stdcall *LIST_UNTIL)(const UINT Number);
extern LIST_UNTIL list_until;
typedef void (__stdcall *SET_LIST_JUMP)(const UINT Pos);
extern SET_LIST_JUMP set_list_jump;
typedef void (__stdcall *N_SET_EXTSTARTPOS_LIST)(const UINT CardNo, const UINT Pos);
extern N_SET_EXTSTARTPOS_LIST n_set_extstartpos_list;
typedef void (__stdcall *N_SET_CONTROL_MODE_LIST)(const UINT CardNo, const UINT Mode);
extern N_SET_CONTROL_MODE_LIST n_set_control_mode_list;
typedef void (__stdcall *N_SIMULATE_EXT_START)(const UINT CardNo, const long Delay, const UINT EncoderNo);
extern N_SIMULATE_EXT_START n_simulate_ext_start;
typedef void (__stdcall *SET_EXTSTARTPOS_LIST)(const UINT Pos);
extern SET_EXTSTARTPOS_LIST set_extstartpos_list;
typedef void (__stdcall *SET_CONTROL_MODE_LIST)(const UINT Mode);
extern SET_CONTROL_MODE_LIST set_control_mode_list;
typedef void (__stdcall *SIMULATE_EXT_START)(const long Delay, const UINT EncoderNo);
extern SIMULATE_EXT_START simulate_ext_start;
typedef void (__stdcall *N_LIST_RETURN)(const UINT CardNo);
extern N_LIST_RETURN n_list_return;
typedef void (__stdcall *N_LIST_CALL)(const UINT CardNo, const UINT Pos);
extern N_LIST_CALL n_list_call;
typedef void (__stdcall *N_LIST_CALL_ABS)(const UINT CardNo, const UINT Pos);
extern N_LIST_CALL_ABS n_list_call_abs;
typedef void (__stdcall *N_SUB_CALL)(const UINT CardNo, const UINT Index);
extern N_SUB_CALL n_sub_call;
typedef void (__stdcall *N_SUB_CALL_ABS)(const UINT CardNo, const UINT Index);
extern N_SUB_CALL_ABS n_sub_call_abs;
typedef void (__stdcall *LIST_RETURN)(void);
extern LIST_RETURN list_return;
typedef void (__stdcall *LIST_CALL)(const UINT Pos);
extern LIST_CALL list_call;
typedef void (__stdcall *LIST_CALL_ABS)(const UINT Pos);
extern LIST_CALL_ABS list_call_abs;
typedef void (__stdcall *SUB_CALL)(const UINT Index);
extern SUB_CALL sub_call;
typedef void (__stdcall *SUB_CALL_ABS)(const UINT Index);
extern SUB_CALL_ABS sub_call_abs;
typedef void (__stdcall *N_LIST_CALL_COND)(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Pos);
extern N_LIST_CALL_COND n_list_call_cond;
typedef void (__stdcall *N_LIST_CALL_ABS_COND)(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Pos);
extern N_LIST_CALL_ABS_COND n_list_call_abs_cond;
typedef void (__stdcall *N_SUB_CALL_COND)(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Pos);
extern N_SUB_CALL_COND n_sub_call_cond;
typedef void (__stdcall *N_SUB_CALL_ABS_COND)(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Pos);
extern N_SUB_CALL_ABS_COND n_sub_call_abs_cond;
typedef void (__stdcall *N_LIST_JUMP_POS_COND)(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Index);
extern N_LIST_JUMP_POS_COND n_list_jump_pos_cond;
typedef void (__stdcall *N_LIST_JUMP_REL_COND)(const UINT CardNo, const UINT Mask1, const UINT Mask0, const long Index);
extern N_LIST_JUMP_REL_COND n_list_jump_rel_cond;
typedef void (__stdcall *N_IF_COND)(const UINT CardNo, const UINT Mask1, const UINT Mask0);
extern N_IF_COND n_if_cond;
typedef void (__stdcall *N_IF_NOT_COND)(const UINT CardNo, const UINT Mask1, const UINT Mask0);
extern N_IF_NOT_COND n_if_not_cond;
typedef void (__stdcall *N_IF_PIN_COND)(const UINT CardNo, const UINT Mask1, const UINT Mask0);
extern N_IF_PIN_COND n_if_pin_cond;
typedef void (__stdcall *N_IF_NOT_PIN_COND)(const UINT CardNo, const UINT Mask1, const UINT Mask0);
extern N_IF_NOT_PIN_COND n_if_not_pin_cond;
typedef void (__stdcall *N_SWITCH_IOPORT)(const UINT CardNo, const UINT MaskBits, const UINT ShiftBits);
extern N_SWITCH_IOPORT n_switch_ioport;
typedef void (__stdcall *N_LIST_JUMP_COND)(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Pos);
extern N_LIST_JUMP_COND n_list_jump_cond;
typedef void (__stdcall *LIST_CALL_COND)(const UINT Mask1, const UINT Mask0, const UINT Pos);
extern LIST_CALL_COND list_call_cond;
typedef void (__stdcall *LIST_CALL_ABS_COND)(const UINT Mask1, const UINT Mask0, const UINT Pos);
extern LIST_CALL_ABS_COND list_call_abs_cond;
typedef void (__stdcall *SUB_CALL_COND)(const UINT Mask1, const UINT Mask0, const UINT Index);
extern SUB_CALL_COND sub_call_cond;
typedef void (__stdcall *SUB_CALL_ABS_COND)(const UINT Mask1, const UINT Mask0, const UINT Index);
extern SUB_CALL_ABS_COND sub_call_abs_cond;
typedef void (__stdcall *LIST_JUMP_POS_COND)(const UINT Mask1, const UINT Mask0, const UINT Pos);
extern LIST_JUMP_POS_COND list_jump_pos_cond;
typedef void (__stdcall *LIST_JUMP_REL_COND)(const UINT Mask1, const UINT Mask0, const long Pos);
extern LIST_JUMP_REL_COND list_jump_rel_cond;
typedef void (__stdcall *IF_COND)(const UINT Mask1, const UINT Mask0);
extern IF_COND if_cond;
typedef void (__stdcall *IF_NOT_COND)(const UINT Mask1, const UINT Mask0);
extern IF_NOT_COND if_not_cond;
typedef void (__stdcall *IF_PIN_COND)(const UINT Mask1, const UINT Mask0);
extern IF_PIN_COND if_pin_cond;
typedef void (__stdcall *IF_NOT_PIN_COND)(const UINT Mask1, const UINT Mask0);
extern IF_NOT_PIN_COND if_not_pin_cond;
typedef void (__stdcall *SWITCH_IOPORT)(const UINT MaskBits, const UINT ShiftBits);
extern SWITCH_IOPORT switch_ioport;
typedef void (__stdcall *LIST_JUMP_COND)(const UINT Mask1, const UINT Mask0, const UINT Pos);
extern LIST_JUMP_COND list_jump_cond;
typedef void (__stdcall *N_SELECT_CHAR_SET)(const UINT CardNo, const UINT No);
extern N_SELECT_CHAR_SET n_select_char_set;
typedef void (__stdcall *N_MARK_TEXT)(const UINT CardNo, const char* Text);
extern N_MARK_TEXT n_mark_text;
typedef void (__stdcall *N_MARK_TEXT_ABS)(const UINT CardNo, const char* Text);
extern N_MARK_TEXT_ABS n_mark_text_abs;
typedef void (__stdcall *N_MARK_CHAR)(const UINT CardNo, const UINT Char);
extern N_MARK_CHAR n_mark_char;
typedef void (__stdcall *N_MARK_CHAR_ABS)(const UINT CardNo, const UINT Char);
extern N_MARK_CHAR_ABS n_mark_char_abs;
typedef void (__stdcall *SELECT_CHAR_SET)(const UINT No);
extern SELECT_CHAR_SET select_char_set;
typedef void (__stdcall *MARK_TEXT)(const char* Text);
extern MARK_TEXT mark_text;
typedef void (__stdcall *MARK_TEXT_ABS)(const char* Text);
extern MARK_TEXT_ABS mark_text_abs;
typedef void (__stdcall *MARK_CHAR)(const UINT Char);
extern MARK_CHAR mark_char;
typedef void (__stdcall *MARK_CHAR_ABS)(const UINT Char);
extern MARK_CHAR_ABS mark_char_abs;
typedef void (__stdcall *N_MARK_SERIAL)(const UINT CardNo, const UINT Mode, const UINT Digits);
extern N_MARK_SERIAL n_mark_serial;
typedef void (__stdcall *N_MARK_SERIAL_ABS)(const UINT CardNo, const UINT Mode, const UINT Digits);
extern N_MARK_SERIAL_ABS n_mark_serial_abs;
typedef void (__stdcall *N_MARK_DATE)(const UINT CardNo, const UINT Part, const UINT Mode);
extern N_MARK_DATE n_mark_date;
typedef void (__stdcall *N_MARK_DATE_ABS)(const UINT CardNo, const UINT Part, const UINT Mode);
extern N_MARK_DATE_ABS n_mark_date_abs;
typedef void (__stdcall *N_MARK_TIME)(const UINT CardNo, const UINT Part, const UINT Mode);
extern N_MARK_TIME n_mark_time;
typedef void (__stdcall *N_MARK_TIME_ABS)(const UINT CardNo, const UINT Part, const UINT Mode);
extern N_MARK_TIME_ABS n_mark_time_abs;
typedef void (__stdcall *N_TIME_FIX_F_OFF)(const UINT CardNo, const UINT FirstDay, const UINT Offset);
extern N_TIME_FIX_F_OFF n_time_fix_f_off;
typedef void (__stdcall *N_TIME_FIX_F)(const UINT CardNo, const UINT FirstDay);
extern N_TIME_FIX_F n_time_fix_f;
typedef void (__stdcall *N_TIME_FIX)(const UINT CardNo);
extern N_TIME_FIX n_time_fix;
typedef void (__stdcall *MARK_SERIAL)(const UINT Mode, const UINT Digits);
extern MARK_SERIAL mark_serial;
typedef void (__stdcall *MARK_SERIAL_ABS)(const UINT Mode, const UINT Digits);
extern MARK_SERIAL_ABS mark_serial_abs;
typedef void (__stdcall *MARK_DATE)(const UINT Part, const UINT Mode);
extern MARK_DATE mark_date;
typedef void (__stdcall *MARK_DATE_ABS)(const UINT Part, const UINT Mode);
extern MARK_DATE_ABS mark_date_abs;
typedef void (__stdcall *MARK_TIME)(const UINT Part, const UINT Mode);
extern MARK_TIME mark_time;
typedef void (__stdcall *MARK_TIME_ABS)(const UINT Part, const UINT Mode);
extern MARK_TIME_ABS mark_time_abs;
typedef void (__stdcall *TIME_FIX_F_OFF)(const UINT FirstDay, const UINT Offset);
extern TIME_FIX_F_OFF time_fix_f_off;
typedef void (__stdcall *TIME_FIX_F)(const UINT FirstDay);
extern TIME_FIX_F time_fix_f;
typedef void (__stdcall *TIME_FIX)(void);
extern TIME_FIX time_fix;
typedef void (__stdcall *N_CLEAR_IO_COND_LIST)(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Mask);
extern N_CLEAR_IO_COND_LIST n_clear_io_cond_list;
typedef void (__stdcall *N_SET_IO_COND_LIST)(const UINT CardNo, const UINT Mask1, const UINT Mask0, const UINT Mask);
extern N_SET_IO_COND_LIST n_set_io_cond_list;
typedef void (__stdcall *N_WRITE_IO_PORT_MASK_LIST)(const UINT CardNo, const UINT Value, const UINT Mask);
extern N_WRITE_IO_PORT_MASK_LIST n_write_io_port_mask_list;
typedef void (__stdcall *N_WRITE_8BIT_PORT_LIST)(const UINT CardNo, const UINT Value);
extern N_WRITE_8BIT_PORT_LIST n_write_8bit_port_list;
typedef void (__stdcall *N_READ_IO_PORT_LIST)(const UINT CardNo);
extern N_READ_IO_PORT_LIST n_read_io_port_list;
typedef void (__stdcall *N_WRITE_DA_X_LIST)(const UINT CardNo, const UINT x, const UINT Value);
extern N_WRITE_DA_X_LIST n_write_da_x_list;
typedef void (__stdcall *N_WRITE_IO_PORT_LIST)(const UINT CardNo, const UINT Value);
extern N_WRITE_IO_PORT_LIST n_write_io_port_list;
typedef void (__stdcall *N_WRITE_DA_1_LIST)(const UINT CardNo, const UINT Value);
extern N_WRITE_DA_1_LIST n_write_da_1_list;
typedef void (__stdcall *N_WRITE_DA_2_LIST)(const UINT CardNo, const UINT Value);
extern N_WRITE_DA_2_LIST n_write_da_2_list;
typedef void (__stdcall *CLEAR_IO_COND_LIST)(const UINT Mask1, const UINT Mask0, const UINT MaskClear);
extern CLEAR_IO_COND_LIST clear_io_cond_list;
typedef void (__stdcall *SET_IO_COND_LIST)(const UINT Mask1, const UINT Mask0, const UINT MaskSet);
extern SET_IO_COND_LIST set_io_cond_list;
typedef void (__stdcall *WRITE_IO_PORT_MASK_LIST)(const UINT Value, const UINT Mask);
extern WRITE_IO_PORT_MASK_LIST write_io_port_mask_list;
typedef void (__stdcall *WRITE_8BIT_PORT_LIST)(const UINT Value);
extern WRITE_8BIT_PORT_LIST write_8bit_port_list;
typedef void (__stdcall *READ_IO_PORT_LIST)(void);
extern READ_IO_PORT_LIST read_io_port_list;
typedef void (__stdcall *WRITE_DA_X_LIST)(const UINT x, const UINT Value);
extern WRITE_DA_X_LIST write_da_x_list;
typedef void (__stdcall *WRITE_IO_PORT_LIST)(const UINT Value);
extern WRITE_IO_PORT_LIST write_io_port_list;
typedef void (__stdcall *WRITE_DA_1_LIST)(const UINT Value);
extern WRITE_DA_1_LIST write_da_1_list;
typedef void (__stdcall *WRITE_DA_2_LIST)(const UINT Value);
extern WRITE_DA_2_LIST write_da_2_list;
typedef void (__stdcall *N_LASER_SIGNAL_ON_LIST)(const UINT CardNo);
extern N_LASER_SIGNAL_ON_LIST n_laser_signal_on_list;
typedef void (__stdcall *N_LASER_SIGNAL_OFF_LIST)(const UINT CardNo);
extern N_LASER_SIGNAL_OFF_LIST n_laser_signal_off_list;
typedef void (__stdcall *N_PARA_LASER_ON_PULSES_LIST)(const UINT CardNo, const UINT Period, const UINT Pulses, const UINT P);
extern N_PARA_LASER_ON_PULSES_LIST n_para_laser_on_pulses_list;
typedef void (__stdcall *N_LASER_ON_PULSES_LIST)(const UINT CardNo, const UINT Period, const UINT Pulses);
extern N_LASER_ON_PULSES_LIST n_laser_on_pulses_list;
typedef void (__stdcall *N_LASER_ON_LIST)(const UINT CardNo, const UINT Period);
extern N_LASER_ON_LIST n_laser_on_list;
typedef void (__stdcall *N_SET_LASER_DELAYS)(const UINT CardNo, const long LaserOnDelay, const UINT LaserOffDelay);
extern N_SET_LASER_DELAYS n_set_laser_delays;
typedef void (__stdcall *N_SET_STANDBY_LIST)(const UINT CardNo, const UINT HalfPeriod, const UINT PulseLength);
extern N_SET_STANDBY_LIST n_set_standby_list;
typedef void (__stdcall *N_SET_LASER_PULSES)(const UINT CardNo, const UINT HalfPeriod, const UINT PulseLength);
extern N_SET_LASER_PULSES n_set_laser_pulses;
typedef void (__stdcall *N_SET_FIRSTPULSE_KILLER_LIST)(const UINT CardNo, const UINT Length);
extern N_SET_FIRSTPULSE_KILLER_LIST n_set_firstpulse_killer_list;
typedef void (__stdcall *N_SET_QSWITCH_DELAY_LIST)(const UINT CardNo, const UINT Delay);
extern N_SET_QSWITCH_DELAY_LIST n_set_qswitch_delay_list;
typedef void (__stdcall *N_SET_LASER_PIN_OUT_LIST)(const UINT CardNo, const UINT Pins);
extern N_SET_LASER_PIN_OUT_LIST n_set_laser_pin_out_list;
typedef void (__stdcall *N_SET_VECTOR_CONTROL)(const UINT CardNo, const UINT Ctrl, const UINT Value);
extern N_SET_VECTOR_CONTROL n_set_vector_control;
typedef void (__stdcall *N_SET_DEFAULT_PIXEL_LIST)(const UINT CardNo, const UINT PulseLength);
extern N_SET_DEFAULT_PIXEL_LIST n_set_default_pixel_list;
typedef void (__stdcall *N_SET_AUTO_LASER_PARAMS_LIST)(const UINT CardNo, const UINT Ctrl, const UINT Value, const UINT MinValue, const UINT MaxValue);
extern N_SET_AUTO_LASER_PARAMS_LIST n_set_auto_laser_params_list;
typedef void (__stdcall *N_SET_PULSE_PICKING_LIST)(const UINT CardNo, const UINT No);
extern N_SET_PULSE_PICKING_LIST n_set_pulse_picking_list;
typedef void (__stdcall *N_SET_SOFTSTART_LEVEL_LIST)(const UINT CardNo, const UINT Index, const UINT Level1, const UINT Level2, const UINT Level3);
extern N_SET_SOFTSTART_LEVEL_LIST n_set_softstart_level_list;
typedef void (__stdcall *N_SET_SOFTSTART_MODE_LIST)(const UINT CardNo, const UINT Mode, const UINT Number, const UINT Delay);
extern N_SET_SOFTSTART_MODE_LIST n_set_softstart_mode_list;
typedef void (__stdcall *N_SET_LASER_TIMING)(const UINT CardNo, const UINT HalfPeriod, const UINT PulseLength1, const UINT PulseLength2, const UINT TimeBase);
extern N_SET_LASER_TIMING n_set_laser_timing;
typedef void (__stdcall *LASER_SIGNAL_ON_LIST)(void);
extern LASER_SIGNAL_ON_LIST laser_signal_on_list;
typedef void (__stdcall *LASER_SIGNAL_OFF_LIST)(void);
extern LASER_SIGNAL_OFF_LIST laser_signal_off_list;
typedef void (__stdcall *PARA_LASER_ON_PULSES_LIST)(const UINT Period, const UINT Pulses, const UINT P);
extern PARA_LASER_ON_PULSES_LIST para_laser_on_pulses_list;
typedef void (__stdcall *LASER_ON_PULSES_LIST)(const UINT Period, const UINT Pulses);
extern LASER_ON_PULSES_LIST laser_on_pulses_list;
typedef void (__stdcall *LASER_ON_LIST)(const UINT Period);
extern LASER_ON_LIST laser_on_list;
typedef void (__stdcall *SET_LASER_DELAYS)(const long LaserOnDelay, const UINT LaserOffDelay);
extern SET_LASER_DELAYS set_laser_delays;
typedef void (__stdcall *SET_STANDBY_LIST)(const UINT HalfPeriod, const UINT PulseLength);
extern SET_STANDBY_LIST set_standby_list;
typedef void (__stdcall *SET_LASER_PULSES)(const UINT HalfPeriod, const UINT PulseLength);
extern SET_LASER_PULSES set_laser_pulses;
typedef void (__stdcall *SET_FIRSTPULSE_KILLER_LIST)(const UINT Length);
extern SET_FIRSTPULSE_KILLER_LIST set_firstpulse_killer_list;
typedef void (__stdcall *SET_QSWITCH_DELAY_LIST)(const UINT Delay);
extern SET_QSWITCH_DELAY_LIST set_qswitch_delay_list;
typedef void (__stdcall *SET_LASER_PIN_OUT_LIST)(const UINT Pins);
extern SET_LASER_PIN_OUT_LIST set_laser_pin_out_list;
typedef void (__stdcall *SET_VECTOR_CONTROL)(const UINT Ctrl, const UINT Value);
extern SET_VECTOR_CONTROL set_vector_control;
typedef void (__stdcall *SET_DEFAULT_PIXEL_LIST)(const UINT PulseLength);
extern SET_DEFAULT_PIXEL_LIST set_default_pixel_list;
typedef void (__stdcall *SET_AUTO_LASER_PARAMS_LIST)(const UINT Ctrl, const UINT Value, const UINT MinValue, const UINT MaxValue);
extern SET_AUTO_LASER_PARAMS_LIST set_auto_laser_params_list;
typedef void (__stdcall *SET_PULSE_PICKING_LIST)(const UINT No);
extern SET_PULSE_PICKING_LIST set_pulse_picking_list;
typedef void (__stdcall *SET_SOFTSTART_LEVEL_LIST)(const UINT Index, const UINT Level1, const UINT Level2, const UINT Level3);
extern SET_SOFTSTART_LEVEL_LIST set_softstart_level_list;
typedef void (__stdcall *SET_SOFTSTART_MODE_LIST)(const UINT Mode, const UINT Number, const UINT Delay);
extern SET_SOFTSTART_MODE_LIST set_softstart_mode_list;
typedef void (__stdcall *SET_LASER_TIMING)(const UINT HalfPeriod, const UINT PulseLength1, const UINT PulseLength2, const UINT TimeBase);
extern SET_LASER_TIMING set_laser_timing;
typedef void (__stdcall *N_FLY_RETURN_Z)(const UINT CardNo, const long X, const long Y, const long Z);
extern N_FLY_RETURN_Z n_fly_return_z;
typedef void (__stdcall *N_FLY_RETURN)(const UINT CardNo, const long X, const long Y);
extern N_FLY_RETURN n_fly_return;
typedef void (__stdcall *N_SET_ROT_CENTER_LIST)(const UINT CardNo, const long X, const long Y);
extern N_SET_ROT_CENTER_LIST n_set_rot_center_list;
typedef void (__stdcall *N_SET_EXT_START_DELAY_LIST)(const UINT CardNo, const long Delay, const UINT EncoderNo);
extern N_SET_EXT_START_DELAY_LIST n_set_ext_start_delay_list;
typedef void (__stdcall *N_SET_FLY_X)(const UINT CardNo, const double ScaleX);
extern N_SET_FLY_X n_set_fly_x;
typedef void (__stdcall *N_SET_FLY_Y)(const UINT CardNo, const double ScaleY);
extern N_SET_FLY_Y n_set_fly_y;
typedef void (__stdcall *N_SET_FLY_Z)(const UINT CardNo, const double ScaleZ, const UINT EndoderNo);
extern N_SET_FLY_Z n_set_fly_z;
typedef void (__stdcall *N_SET_FLY_ROT)(const UINT CardNo, const double Resolution);
extern N_SET_FLY_ROT n_set_fly_rot;
typedef void (__stdcall *N_SET_FLY_2D)(const UINT CardNo, const double ScaleX, const double ScaleY);
extern N_SET_FLY_2D n_set_fly_2d;
typedef void (__stdcall *N_SET_FLY_X_POS)(const UINT CardNo, const double ScaleX);
extern N_SET_FLY_X_POS n_set_fly_x_pos;
typedef void (__stdcall *N_SET_FLY_Y_POS)(const UINT CardNo, const double ScaleY);
extern N_SET_FLY_Y_POS n_set_fly_y_pos;
typedef void (__stdcall *N_SET_FLY_ROT_POS)(const UINT CardNo, const double Resolution);
extern N_SET_FLY_ROT_POS n_set_fly_rot_pos;
typedef void (__stdcall *N_SET_FLY_LIMITS)(const UINT CardNo, const long Xmin, const long Xmax, const long Ymin, const long Ymax);
extern N_SET_FLY_LIMITS n_set_fly_limits;
typedef void (__stdcall *N_SET_FLY_LIMITS_Z)(const UINT CardNo, const long Zmin, const long Zmax);
extern N_SET_FLY_LIMITS_Z n_set_fly_limits_z;
typedef void (__stdcall *N_IF_FLY_X_OVERFLOW)(const UINT CardNo, const long Mode);
extern N_IF_FLY_X_OVERFLOW n_if_fly_x_overflow;
typedef void (__stdcall *N_IF_FLY_Y_OVERFLOW)(const UINT CardNo, const long Mode);
extern N_IF_FLY_Y_OVERFLOW n_if_fly_y_overflow;
typedef void (__stdcall *N_IF_FLY_Z_OVERFLOW)(const UINT CardNo, const long Mode);
extern N_IF_FLY_Z_OVERFLOW n_if_fly_z_overflow;
typedef void (__stdcall *N_IF_NOT_FLY_X_OVERFLOW)(const UINT CardNo, const long Mode);
extern N_IF_NOT_FLY_X_OVERFLOW n_if_not_fly_x_overflow;
typedef void (__stdcall *N_IF_NOT_FLY_Y_OVERFLOW)(const UINT CardNo, const long Mode);
extern N_IF_NOT_FLY_Y_OVERFLOW n_if_not_fly_y_overflow;
typedef void (__stdcall *N_IF_NOT_FLY_Z_OVERFLOW)(const UINT CardNo, const long Mode);
extern N_IF_NOT_FLY_Z_OVERFLOW n_if_not_fly_z_overflow;
typedef void (__stdcall *N_CLEAR_FLY_OVERFLOW)(const UINT CardNo, const UINT Mode);
extern N_CLEAR_FLY_OVERFLOW n_clear_fly_overflow;
typedef void (__stdcall *N_SET_MCBSP_X_LIST)(const UINT CardNo, const double ScaleX);
extern N_SET_MCBSP_X_LIST n_set_mcbsp_x_list;
typedef void (__stdcall *N_SET_MCBSP_Y_LIST)(const UINT CardNo, const double ScaleY);
extern N_SET_MCBSP_Y_LIST n_set_mcbsp_y_list;
typedef void (__stdcall *N_SET_MCBSP_ROT_LIST)(const UINT CardNo, const double Resolution);
extern N_SET_MCBSP_ROT_LIST n_set_mcbsp_rot_list;
typedef void (__stdcall *N_SET_MCBSP_MATRIX_LIST)(const UINT CardNo);
extern N_SET_MCBSP_MATRIX_LIST n_set_mcbsp_matrix_list;
typedef void (__stdcall *N_SET_MCBSP_IN_LIST)(const UINT CardNo, const UINT Mode, const double Scale);
extern N_SET_MCBSP_IN_LIST n_set_mcbsp_in_list;
typedef void (__stdcall *N_WAIT_FOR_ENCODER_MODE)(const UINT CardNo, const long Value, const UINT EncoderNo, const long Mode);
extern N_WAIT_FOR_ENCODER_MODE n_wait_for_encoder_mode;
typedef void (__stdcall *N_WAIT_FOR_MCBSP)(const UINT CardNo, const UINT Axis, const long Value, const long Mode);
extern N_WAIT_FOR_MCBSP n_wait_for_mcbsp;
typedef void (__stdcall *N_SET_ENCODER_SPEED)(const UINT CardNo, const UINT EncoderNo, const double Speed, const double Smooth);
extern N_SET_ENCODER_SPEED n_set_encoder_speed;
typedef void (__stdcall *N_GET_MCBSP_LIST)(const UINT CardNo);
extern N_GET_MCBSP_LIST n_get_mcbsp_list;
typedef void (__stdcall *N_STORE_ENCODER)(const UINT CardNo, const UINT Pos);
extern N_STORE_ENCODER n_store_encoder;
typedef void (__stdcall *N_WAIT_FOR_ENCODER_IN_RANGE)(const UINT CardNo, const long EncXmin, const long EncXmax, const long EncYmin, const long EncYmax);
extern N_WAIT_FOR_ENCODER_IN_RANGE n_wait_for_encoder_in_range;
typedef void (__stdcall *N_ACTIVATE_FLY_XY)(const UINT CardNo, const double ScaleX, const double ScaleY);
extern N_ACTIVATE_FLY_XY n_activate_fly_xy;
typedef void (__stdcall *N_ACTIVATE_FLY_2D)(const UINT CardNo, const double ScaleX, const double ScaleY);
extern N_ACTIVATE_FLY_2D n_activate_fly_2d;
typedef void (__stdcall *N_IF_NOT_ACTIVATED)(const UINT CardNo);
extern N_IF_NOT_ACTIVATED n_if_not_activated;
typedef void (__stdcall *N_PARK_POSITION)(const UINT CardNo, const UINT Mode, const long X, const long Y);
extern N_PARK_POSITION n_park_position;
typedef void (__stdcall *N_PARK_RETURN)(const UINT CardNo, const UINT Mode, const long X, const long Y);
extern N_PARK_RETURN n_park_return;
typedef void (__stdcall *N_WAIT_FOR_ENCODER)(const UINT CardNo, const long Value, const UINT EncoderNo);
extern N_WAIT_FOR_ENCODER n_wait_for_encoder;
typedef void (__stdcall *FLY_RETURN_Z)(const long X, const long Y, const long Z);
extern FLY_RETURN_Z fly_return_z;
typedef void (__stdcall *FLY_RETURN)(const long X, const long Y);
extern FLY_RETURN fly_return;
typedef void (__stdcall *SET_ROT_CENTER_LIST)(const long X, const long Y);
extern SET_ROT_CENTER_LIST set_rot_center_list;
typedef void (__stdcall *SET_EXT_START_DELAY_LIST)(const long Delay, const UINT EncoderNo);
extern SET_EXT_START_DELAY_LIST set_ext_start_delay_list;
typedef void (__stdcall *SET_FLY_X)(const double ScaleX);
extern SET_FLY_X set_fly_x;
typedef void (__stdcall *SET_FLY_Y)(const double ScaleY);
extern SET_FLY_Y set_fly_y;
typedef void (__stdcall *SET_FLY_Z)(const double ScaleZ, const UINT EncoderNo);
extern SET_FLY_Z set_fly_z;
typedef void (__stdcall *SET_FLY_ROT)(const double Resolution);
extern SET_FLY_ROT set_fly_rot;
typedef void (__stdcall *SET_FLY_2D)(const double ScaleX, const double ScaleY);
extern SET_FLY_2D set_fly_2d;
typedef void (__stdcall *SET_FLY_X_POS)(const double ScaleX);
extern SET_FLY_X_POS set_fly_x_pos;
typedef void (__stdcall *SET_FLY_Y_POS)(const double ScaleY);
extern SET_FLY_Y_POS set_fly_y_pos;
typedef void (__stdcall *SET_FLY_ROT_POS)(const double Resolution);
extern SET_FLY_ROT_POS set_fly_rot_pos;
typedef void (__stdcall *SET_FLY_LIMITS)(const long Xmin, const long Xmax, const long Ymin, const long Ymax);
extern SET_FLY_LIMITS set_fly_limits;
typedef void (__stdcall *SET_FLY_LIMITS_Z)(const long Zmin, const long Zmax);
extern SET_FLY_LIMITS_Z set_fly_limits_z;
typedef void (__stdcall *IF_FLY_X_OVERFLOW)(const long Mode);
extern IF_FLY_X_OVERFLOW if_fly_x_overflow;
typedef void (__stdcall *IF_FLY_Y_OVERFLOW)(const long Mode);
extern IF_FLY_Y_OVERFLOW if_fly_y_overflow;
typedef void (__stdcall *IF_FLY_Z_OVERFLOW)(const long Mode);
extern IF_FLY_Z_OVERFLOW if_fly_z_overflow;
typedef void (__stdcall *IF_NOT_FLY_X_OVERFLOW)(const long Mode);
extern IF_NOT_FLY_X_OVERFLOW if_not_fly_x_overflow;
typedef void (__stdcall *IF_NOT_FLY_Y_OVERFLOW)(const long Mode);
extern IF_NOT_FLY_Y_OVERFLOW if_not_fly_y_overflow;
typedef void (__stdcall *IF_NOT_FLY_Z_OVERFLOW)(const long Mode);
extern IF_NOT_FLY_Z_OVERFLOW if_not_fly_z_overflow;
typedef void (__stdcall *CLEAR_FLY_OVERFLOW)(const UINT Mode);
extern CLEAR_FLY_OVERFLOW clear_fly_overflow;
typedef void (__stdcall *SET_MCBSP_X_LIST)(const double ScaleX);
extern SET_MCBSP_X_LIST set_mcbsp_x_list;
typedef void (__stdcall *SET_MCBSP_Y_LIST)(const double ScaleY);
extern SET_MCBSP_Y_LIST set_mcbsp_y_list;
typedef void (__stdcall *SET_MCBSP_ROT_LIST)(const double Resolution);
extern SET_MCBSP_ROT_LIST set_mcbsp_rot_list;
typedef void (__stdcall *SET_MCBSP_MATRIX_LIST)(void);
extern SET_MCBSP_MATRIX_LIST set_mcbsp_matrix_list;
typedef void (__stdcall *SET_MCBSP_IN_LIST)(const UINT Mode, const double Scale);
extern SET_MCBSP_IN_LIST set_mcbsp_in_list;
typedef void (__stdcall *WAIT_FOR_ENCODER_MODE)(const long Value, const UINT EncoderNo, const long Mode);
extern WAIT_FOR_ENCODER_MODE wait_for_encoder_mode;
typedef void (__stdcall *WAIT_FOR_MCBSP)(const UINT Axis, const long Value, const long Mode);
extern WAIT_FOR_MCBSP wait_for_mcbsp;
typedef void (__stdcall *SET_ENCODER_SPEED)(const UINT EncoderNo, const double Speed, const double Smooth);
extern SET_ENCODER_SPEED set_encoder_speed;
typedef void (__stdcall *GET_MCBSP_LIST)(void);
extern GET_MCBSP_LIST get_mcbsp_list;
typedef void (__stdcall *STORE_ENCODER)(const UINT Pos);
extern STORE_ENCODER store_encoder;
typedef void (__stdcall *WAIT_FOR_ENCODER_IN_RANGE)(const long EncXmin, const long EncXmax, const long EncYmin, const long EncYmax);
extern WAIT_FOR_ENCODER_IN_RANGE wait_for_encoder_in_range;
typedef void (__stdcall *ACTIVATE_FLY_XY)(const double ScaleX, const double ScaleY);
extern ACTIVATE_FLY_XY activate_fly_xy;
typedef void (__stdcall *ACTIVATE_FLY_2D)(const double ScaleX, const double ScaleY);
extern ACTIVATE_FLY_2D activate_fly_2d;
typedef void (__stdcall *IF_NOT_ACTIVATED)(void);
extern IF_NOT_ACTIVATED if_not_activated;
typedef void (__stdcall *PARK_POSITION)(const UINT Mode, const long X, const long Y);
extern PARK_POSITION park_position;
typedef void (__stdcall *PARK_RETURN)(const UINT Mode, const long X, const long Y);
extern PARK_RETURN park_return;
typedef void (__stdcall *WAIT_FOR_ENCODER)(const long Value, const UINT EncoderNo);
extern WAIT_FOR_ENCODER wait_for_encoder;
typedef void (__stdcall *N_SAVE_AND_RESTART_TIMER)(const UINT CardNo);
extern N_SAVE_AND_RESTART_TIMER n_save_and_restart_timer;
typedef void (__stdcall *N_SET_WOBBEL)(const UINT CardNo, const UINT Transversal, const UINT Longitudinal, const double Freq);
extern N_SET_WOBBEL n_set_wobbel;
typedef void (__stdcall *N_SET_WOBBEL_MODE)(const UINT CardNo, const UINT Transversal, const UINT Longitudinal, const double Freq, const long Mode);
extern N_SET_WOBBEL_MODE n_set_wobbel_mode;
typedef void (__stdcall *N_SET_TRIGGER)(const UINT CardNo, const UINT Period, const UINT Signal1, const UINT Signal2);
extern N_SET_TRIGGER n_set_trigger;
typedef void (__stdcall *N_SET_TRIGGER4)(const UINT CardNo, const UINT Period, const UINT Signal1, const UINT Signal2, const UINT Signal3, const UINT Signal4);
extern N_SET_TRIGGER4 n_set_trigger4;
typedef void (__stdcall *N_SET_PIXEL_LINE_3D)(const UINT CardNo, const UINT Channel, const UINT HalfPeriod, const double dX, const double dY, const double dZ);
extern N_SET_PIXEL_LINE_3D n_set_pixel_line_3d;
typedef void (__stdcall *N_SET_PIXEL_LINE)(const UINT CardNo, const UINT Channel, const UINT HalfPeriod, const double dX, const double dY);
extern N_SET_PIXEL_LINE n_set_pixel_line;
typedef void (__stdcall *N_SET_N_PIXEL)(const UINT CardNo, const UINT PulseLength, const UINT AnalogOut, const UINT Number);
extern N_SET_N_PIXEL n_set_n_pixel;
typedef void (__stdcall *N_SET_PIXEL)(const UINT CardNo, const UINT PulseLength, const UINT AnalogOut);
extern N_SET_PIXEL n_set_pixel;
typedef void (__stdcall *N_RS232_WRITE_TEXT_LIST)(const UINT CardNo, const char* pData);
extern N_RS232_WRITE_TEXT_LIST n_rs232_write_text_list;
typedef void (__stdcall *N_SET_MCBSP_OUT)(const UINT CardNo, const UINT Signal1, const UINT Signal2);
extern N_SET_MCBSP_OUT n_set_mcbsp_out;
typedef void (__stdcall *N_CAMMING)(const UINT CardNo, const UINT FirstPos, const UINT NPos, const UINT No, const UINT Ctrl, const double Scale, const UINT Code);
extern N_CAMMING n_camming;
typedef void (__stdcall *N_MICRO_VECTOR_ABS_3D)(const UINT CardNo, const long X, const long Y, const long Z, const long LasOn, const long LasOf);
extern N_MICRO_VECTOR_ABS_3D n_micro_vector_abs_3d;
typedef void (__stdcall *N_MICRO_VECTOR_REL_3D)(const UINT CardNo, const long dX, const long dY, const long dZ, const long LasOn, const long LasOf);
extern N_MICRO_VECTOR_REL_3D n_micro_vector_rel_3d;
typedef void (__stdcall *N_MICRO_VECTOR_ABS)(const UINT CardNo, const long X, const long Y, const long LasOn, const long LasOf);
extern N_MICRO_VECTOR_ABS n_micro_vector_abs;
typedef void (__stdcall *N_MICRO_VECTOR_REL)(const UINT CardNo, const long dX, const long dY, const long LasOn, const long LasOf);
extern N_MICRO_VECTOR_REL n_micro_vector_rel;
typedef void (__stdcall *N_SET_FREE_VARIABLE_LIST)(const UINT CardNo, const UINT VarNo, const UINT Value);
extern N_SET_FREE_VARIABLE_LIST n_set_free_variable_list;
typedef void (__stdcall *N_CONTROL_COMMAND_LIST)(const UINT CardNo, const UINT Head, const UINT Axis, const UINT Data);
extern N_CONTROL_COMMAND_LIST n_control_command_list;
typedef void (__stdcall *SAVE_AND_RESTART_TIMER)(void);
extern SAVE_AND_RESTART_TIMER save_and_restart_timer;
typedef void (__stdcall *SET_WOBBEL)(const UINT Transversal, const UINT Longitudinal, const double Freq);
extern SET_WOBBEL set_wobbel;
typedef void (__stdcall *SET_WOBBEL_MODE)(const UINT Transversal, const UINT Longitudinal, const double Freq, const long Mode);
extern SET_WOBBEL_MODE set_wobbel_mode;
typedef void (__stdcall *SET_TRIGGER)(const UINT Period, const UINT Signal1, const UINT Signal2);
extern SET_TRIGGER set_trigger;
typedef void (__stdcall *SET_TRIGGER4)(const UINT Period, const UINT Signal1, const UINT Signal2, const UINT Signal3, const UINT Signal4);
extern SET_TRIGGER4 set_trigger4;
typedef void (__stdcall *SET_PIXEL_LINE_3D)(const UINT Channel, const UINT HalfPeriod, const double dX, const double dY, const double dZ);
extern SET_PIXEL_LINE_3D set_pixel_line_3d;
typedef void (__stdcall *SET_PIXEL_LINE)(const UINT Channel, const UINT HalfPeriod, const double dX, const double dY);
extern SET_PIXEL_LINE set_pixel_line;
typedef void (__stdcall *SET_N_PIXEL)(const UINT PulseLength, const UINT AnalogOut, const UINT Number);
extern SET_N_PIXEL set_n_pixel;
typedef void (__stdcall *SET_PIXEL)(const UINT PulseLength, const UINT AnalogOut);
extern SET_PIXEL set_pixel;
typedef void (__stdcall *RS232_WRITE_TEXT_LIST)(const char* pData);
extern RS232_WRITE_TEXT_LIST rs232_write_text_list;
typedef void (__stdcall *SET_MCBSP_OUT)(const UINT Signal1, const UINT Signal2);
extern SET_MCBSP_OUT set_mcbsp_out;
typedef void (__stdcall *CAMMING)(const UINT FirstPos, const UINT NPos, const UINT No, const UINT Ctrl, const double Scale, const UINT Code);
extern CAMMING camming;
typedef void (__stdcall *MICRO_VECTOR_ABS_3D)(const long X, const long Y, const long Z, const long LasOn, const long LasOf);
extern MICRO_VECTOR_ABS_3D micro_vector_abs_3d;
typedef void (__stdcall *MICRO_VECTOR_REL_3D)(const long dX, const long dY, const long dZ, const long LasOn, const long LasOf);
extern MICRO_VECTOR_REL_3D micro_vector_rel_3d;
typedef void (__stdcall *MICRO_VECTOR_ABS)(const long X, const long Y, const long LasOn, const long LasOf);
extern MICRO_VECTOR_ABS micro_vector_abs;
typedef void (__stdcall *MICRO_VECTOR_REL)(const long dX, const long dY, const long LasOn, const long LasOf);
extern MICRO_VECTOR_REL micro_vector_rel;
typedef void (__stdcall *SET_FREE_VARIABLE_LIST)(const UINT VarNo, const UINT Value);
extern SET_FREE_VARIABLE_LIST set_free_variable_list;
typedef void (__stdcall *CONTROL_COMMAND_LIST)(const UINT Head, const UINT Axis, const UINT Data);
extern CONTROL_COMMAND_LIST control_command_list;
typedef void (__stdcall *N_TIMED_MARK_ABS_3D)(const UINT CardNo, const long X, const long Y, const long Z, const double T);
extern N_TIMED_MARK_ABS_3D n_timed_mark_abs_3d;
typedef void (__stdcall *N_TIMED_MARK_REL_3D)(const UINT CardNo, const long dX, const long dY, const long dZ, const double T);
extern N_TIMED_MARK_REL_3D n_timed_mark_rel_3d;
typedef void (__stdcall *N_TIMED_MARK_ABS)(const UINT CardNo, const long X, const long Y, const double T);
extern N_TIMED_MARK_ABS n_timed_mark_abs;
typedef void (__stdcall *N_TIMED_MARK_REL)(const UINT CardNo, const long dX, const long dY, const double T);
extern N_TIMED_MARK_REL n_timed_mark_rel;
typedef void (__stdcall *TIMED_MARK_ABS_3D)(const long X, const long Y, const long Z, const double T);
extern TIMED_MARK_ABS_3D timed_mark_abs_3d;
typedef void (__stdcall *TIMED_MARK_REL_3D)(const long dX, const long dY, const long dZ, const double T);
extern TIMED_MARK_REL_3D timed_mark_rel_3d;
typedef void (__stdcall *TIMED_MARK_ABS)(const long X, const long Y, const double T);
extern TIMED_MARK_ABS timed_mark_abs;
typedef void (__stdcall *TIMED_MARK_REL)(const long dX, const long dY, const double T);
extern TIMED_MARK_REL timed_mark_rel;
typedef void (__stdcall *N_MARK_ABS_3D)(const UINT CardNo, const long X, const long Y, const long Z);
extern N_MARK_ABS_3D n_mark_abs_3d;
typedef void (__stdcall *N_MARK_REL_3D)(const UINT CardNo, const long dX, const long dY, const long dZ);
extern N_MARK_REL_3D n_mark_rel_3d;
typedef void (__stdcall *N_MARK_ABS)(const UINT CardNo, const long X, const long Y);
extern N_MARK_ABS n_mark_abs;
typedef void (__stdcall *N_MARK_REL)(const UINT CardNo, const long dX, const long dY);
extern N_MARK_REL n_mark_rel;
typedef void (__stdcall *MARK_ABS_3D)(const long X, const long Y, const long Z);
extern MARK_ABS_3D mark_abs_3d;
typedef void (__stdcall *MARK_REL_3D)(const long dX, const long dY, const long dZ);
extern MARK_REL_3D mark_rel_3d;
typedef void (__stdcall *MARK_ABS)(const long X, const long Y);
extern MARK_ABS mark_abs;
typedef void (__stdcall *MARK_REL)(const long dX, const long dY);
extern MARK_REL mark_rel;
typedef void (__stdcall *N_TIMED_JUMP_ABS_3D)(const UINT CardNo, const long X, const long Y, const long Z, const double T);
extern N_TIMED_JUMP_ABS_3D n_timed_jump_abs_3d;
typedef void (__stdcall *N_TIMED_JUMP_REL_3D)(const UINT CardNo, const long dX, const long dY, const long dZ, const double T);
extern N_TIMED_JUMP_REL_3D n_timed_jump_rel_3d;
typedef void (__stdcall *N_TIMED_JUMP_ABS)(const UINT CardNo, const long X, const long Y, const double T);
extern N_TIMED_JUMP_ABS n_timed_jump_abs;
typedef void (__stdcall *N_TIMED_JUMP_REL)(const UINT CardNo, const long dX, const long dY, const double T);
extern N_TIMED_JUMP_REL n_timed_jump_rel;
typedef void (__stdcall *TIMED_JUMP_ABS_3D)(const long X, const long Y, const long Z, const double T);
extern TIMED_JUMP_ABS_3D timed_jump_abs_3d;
typedef void (__stdcall *TIMED_JUMP_REL_3D)(const long dX, const long dY, const long dZ, const double T);
extern TIMED_JUMP_REL_3D timed_jump_rel_3d;
typedef void (__stdcall *TIMED_JUMP_ABS)(const long X, const long Y, const double T);
extern TIMED_JUMP_ABS timed_jump_abs;
typedef void (__stdcall *TIMED_JUMP_REL)(const long dX, const long dY, const double T);
extern TIMED_JUMP_REL timed_jump_rel;
typedef void (__stdcall *N_JUMP_ABS_3D)(const UINT CardNo, const long X, const long Y, const long Z);
extern N_JUMP_ABS_3D n_jump_abs_3d;
typedef void (__stdcall *N_JUMP_REL_3D)(const UINT CardNo, const long dX, const long dY, const long dZ);
extern N_JUMP_REL_3D n_jump_rel_3d;
typedef void (__stdcall *N_JUMP_ABS)(const UINT CardNo, const long X, const long Y);
extern N_JUMP_ABS n_jump_abs;
typedef void (__stdcall *N_JUMP_REL)(const UINT CardNo, const long dX, const long dY);
extern N_JUMP_REL n_jump_rel;
typedef void (__stdcall *JUMP_ABS_3D)(const long X, const long Y, const long Z);
extern JUMP_ABS_3D jump_abs_3d;
typedef void (__stdcall *JUMP_REL_3D)(const long dX, const long dY, const long dZ);
extern JUMP_REL_3D jump_rel_3d;
typedef void (__stdcall *JUMP_ABS)(const long X, const long Y);
extern JUMP_ABS jump_abs;
typedef void (__stdcall *JUMP_REL)(const long dX, const long dY);
extern JUMP_REL jump_rel;
typedef void (__stdcall *N_PARA_MARK_ABS_3D)(const UINT CardNo, const long X, const long Y, const long Z, const UINT P);
extern N_PARA_MARK_ABS_3D n_para_mark_abs_3d;
typedef void (__stdcall *N_PARA_MARK_REL_3D)(const UINT CardNo, const long dX, const long dY, const long dZ, const UINT P);
extern N_PARA_MARK_REL_3D n_para_mark_rel_3d;
typedef void (__stdcall *N_PARA_MARK_ABS)(const UINT CardNo, const long X, const long Y, const UINT P);
extern N_PARA_MARK_ABS n_para_mark_abs;
typedef void (__stdcall *N_PARA_MARK_REL)(const UINT CardNo, const long dX, const long dY, const UINT P);
extern N_PARA_MARK_REL n_para_mark_rel;
typedef void (__stdcall *PARA_MARK_ABS_3D)(const long X, const long Y, const long Z, const UINT P);
extern PARA_MARK_ABS_3D para_mark_abs_3d;
typedef void (__stdcall *PARA_MARK_REL_3D)(const long dX, const long dY, const long dZ, const UINT P);
extern PARA_MARK_REL_3D para_mark_rel_3d;
typedef void (__stdcall *PARA_MARK_ABS)(const long X, const long Y, const UINT P);
extern PARA_MARK_ABS para_mark_abs;
typedef void (__stdcall *PARA_MARK_REL)(const long dX, const long dY, const UINT P);
extern PARA_MARK_REL para_mark_rel;
typedef void (__stdcall *N_PARA_JUMP_ABS_3D)(const UINT CardNo, const long X, const long Y, const long Z, const UINT P);
extern N_PARA_JUMP_ABS_3D n_para_jump_abs_3d;
typedef void (__stdcall *N_PARA_JUMP_REL_3D)(const UINT CardNo, const long dX, const long dY, const long dZ, const UINT P);
extern N_PARA_JUMP_REL_3D n_para_jump_rel_3d;
typedef void (__stdcall *N_PARA_JUMP_ABS)(const UINT CardNo, const long X, const long Y, const UINT P);
extern N_PARA_JUMP_ABS n_para_jump_abs;
typedef void (__stdcall *N_PARA_JUMP_REL)(const UINT CardNo, const long dX, const long dY, const UINT P);
extern N_PARA_JUMP_REL n_para_jump_rel;
typedef void (__stdcall *PARA_JUMP_ABS_3D)(const long X, const long Y, const long Z, const UINT P);
extern PARA_JUMP_ABS_3D para_jump_abs_3d;
typedef void (__stdcall *PARA_JUMP_REL_3D)(const long dX, const long dY, const long dZ, const UINT P);
extern PARA_JUMP_REL_3D para_jump_rel_3d;
typedef void (__stdcall *PARA_JUMP_ABS)(const long X, const long Y, const UINT P);
extern PARA_JUMP_ABS para_jump_abs;
typedef void (__stdcall *PARA_JUMP_REL)(const long dX, const long dY, const UINT P);
extern PARA_JUMP_REL para_jump_rel;
typedef void (__stdcall *N_TIMED_PARA_MARK_ABS_3D)(const UINT CardNo, const long X, const long Y, const long Z, const UINT P, const double T);
extern N_TIMED_PARA_MARK_ABS_3D n_timed_para_mark_abs_3d;
typedef void (__stdcall *N_TIMED_PARA_MARK_REL_3D)(const UINT CardNo, const long dX, const long dY, const long dZ, const UINT P, const double T);
extern N_TIMED_PARA_MARK_REL_3D n_timed_para_mark_rel_3d;
typedef void (__stdcall *N_TIMED_PARA_JUMP_ABS_3D)(const UINT CardNo, const long X, const long Y, const long Z, const UINT P, const double T);
extern N_TIMED_PARA_JUMP_ABS_3D n_timed_para_jump_abs_3d;
typedef void (__stdcall *N_TIMED_PARA_JUMP_REL_3D)(const UINT CardNo, const long dX, const long dY, const long dZ, const UINT P, const double T);
extern N_TIMED_PARA_JUMP_REL_3D n_timed_para_jump_rel_3d;
typedef void (__stdcall *N_TIMED_PARA_MARK_ABS)(const UINT CardNo, const long X, const long Y, const UINT P, const double T);
extern N_TIMED_PARA_MARK_ABS n_timed_para_mark_abs;
typedef void (__stdcall *N_TIMED_PARA_MARK_REL)(const UINT CardNo, const long dX, const long dY, const UINT P, const double T);
extern N_TIMED_PARA_MARK_REL n_timed_para_mark_rel;
typedef void (__stdcall *N_TIMED_PARA_JUMP_ABS)(const UINT CardNo, const long X, const long Y, const UINT P, const double T);
extern N_TIMED_PARA_JUMP_ABS n_timed_para_jump_abs;
typedef void (__stdcall *N_TIMED_PARA_JUMP_REL)(const UINT CardNo, const long dX, const long dY, const UINT P, const double T);
extern N_TIMED_PARA_JUMP_REL n_timed_para_jump_rel;
typedef void (__stdcall *TIMED_PARA_MARK_ABS_3D)(const long X, const long Y, const long Z, const UINT P, const double T);
extern TIMED_PARA_MARK_ABS_3D timed_para_mark_abs_3d;
typedef void (__stdcall *TIMED_PARA_MARK_REL_3D)(const long dX, const long dY, const long dZ, const UINT P, const double T);
extern TIMED_PARA_MARK_REL_3D timed_para_mark_rel_3d;
typedef void (__stdcall *TIMED_PARA_JUMP_ABS_3D)(const long X, const long Y, const long Z, const UINT P, const double T);
extern TIMED_PARA_JUMP_ABS_3D timed_para_jump_abs_3d;
typedef void (__stdcall *TIMED_PARA_JUMP_REL_3D)(const long dX, const long dY, const long dZ, const UINT P, const double T);
extern TIMED_PARA_JUMP_REL_3D timed_para_jump_rel_3d;
typedef void (__stdcall *TIMED_PARA_MARK_ABS)(const long X, const long Y, const UINT P, const double T);
extern TIMED_PARA_MARK_ABS timed_para_mark_abs;
typedef void (__stdcall *TIMED_PARA_MARK_REL)(const long dX, const long dY, const UINT P, const double T);
extern TIMED_PARA_MARK_REL timed_para_mark_rel;
typedef void (__stdcall *TIMED_PARA_JUMP_ABS)(const long X, const long Y, const UINT P, const double T);
extern TIMED_PARA_JUMP_ABS timed_para_jump_abs;
typedef void (__stdcall *TIMED_PARA_JUMP_REL)(const long dX, const long dY, const UINT P, const double T);
extern TIMED_PARA_JUMP_REL timed_para_jump_rel;
typedef void (__stdcall *N_SET_DEFOCUS_LIST)(const UINT CardNo, const long Shift);
extern N_SET_DEFOCUS_LIST n_set_defocus_list;
typedef void (__stdcall *SET_DEFOCUS_LIST)(const long Shift);
extern SET_DEFOCUS_LIST set_defocus_list;
typedef void (__stdcall *N_TIMED_ARC_ABS)(const UINT CardNo, const long X, const long Y, const double Angle, const double T);
extern N_TIMED_ARC_ABS n_timed_arc_abs;
typedef void (__stdcall *N_TIMED_ARC_REL)(const UINT CardNo, const long dX, const long dY, const double Angle, const double T);
extern N_TIMED_ARC_REL n_timed_arc_rel;
typedef void (__stdcall *TIMED_ARC_ABS)(const long X, const long Y, const double Angle, const double T);
extern TIMED_ARC_ABS timed_arc_abs;
typedef void (__stdcall *TIMED_ARC_REL)(const long dX, const long dY, const double Angle, const double T);
extern TIMED_ARC_REL timed_arc_rel;
typedef void (__stdcall *N_ARC_ABS_3D)(const UINT CardNo, const long X, const long Y, const long Z, const double Angle);
extern N_ARC_ABS_3D n_arc_abs_3d;
typedef void (__stdcall *N_ARC_REL_3D)(const UINT CardNo, const long dX, const long dY, const long dZ, const double Angle);
extern N_ARC_REL_3D n_arc_rel_3d;
typedef void (__stdcall *N_ARC_ABS)(const UINT CardNo, const long X, const long Y, const double Angle);
extern N_ARC_ABS n_arc_abs;
typedef void (__stdcall *N_ARC_REL)(const UINT CardNo, const long dX, const long dY, const double Angle);
extern N_ARC_REL n_arc_rel;
typedef void (__stdcall *N_SET_ELLIPSE)(const UINT CardNo, const UINT A, const UINT B, const double Phi0, const double Phi);
extern N_SET_ELLIPSE n_set_ellipse;
typedef void (__stdcall *N_MARK_ELLIPSE_ABS)(const UINT CardNo, const long X, const long Y, const double Alpha);
extern N_MARK_ELLIPSE_ABS n_mark_ellipse_abs;
typedef void (__stdcall *N_MARK_ELLIPSE_REL)(const UINT CardNo, const long dX, const long dY, const double Alpha);
extern N_MARK_ELLIPSE_REL n_mark_ellipse_rel;
typedef void (__stdcall *ARC_ABS_3D)(const long X, const long Y, const long Z, const double Angle);
extern ARC_ABS_3D arc_abs_3d;
typedef void (__stdcall *ARC_REL_3D)(const long dX, const long dY, const long dZ, const double Angle);
extern ARC_REL_3D arc_rel_3d;
typedef void (__stdcall *ARC_ABS)(const long X, const long Y, const double Angle);
extern ARC_ABS arc_abs;
typedef void (__stdcall *ARC_REL)(const long dX, const long dY, const double Angle);
extern ARC_REL arc_rel;
typedef void (__stdcall *SET_ELLIPSE)(const UINT A, const UINT B, const double Phi0, const double Phi);
extern SET_ELLIPSE set_ellipse;
typedef void (__stdcall *MARK_ELLIPSE_ABS)(const long X, const long Y, const double Alpha);
extern MARK_ELLIPSE_ABS mark_ellipse_abs;
typedef void (__stdcall *MARK_ELLIPSE_REL)(const long dX, const long dY, const double Alpha);
extern MARK_ELLIPSE_REL mark_ellipse_rel;
typedef void (__stdcall *N_SET_OFFSET_XYZ_LIST)(const UINT CardNo, const UINT HeadNo, const long XOffset, const long YOffset, const long ZOffset, const UINT at_once);
extern N_SET_OFFSET_XYZ_LIST n_set_offset_xyz_list;
typedef void (__stdcall *N_SET_OFFSET_LIST)(const UINT CardNo, const UINT HeadNo, const long XOffset, const long YOffset, const UINT at_once);
extern N_SET_OFFSET_LIST n_set_offset_list;
typedef void (__stdcall *N_SET_MATRIX_LIST)(const UINT CardNo, const UINT HeadNo, const UINT Ind1, const UINT Ind2, const double Mij, const UINT at_once);
extern N_SET_MATRIX_LIST n_set_matrix_list;
typedef void (__stdcall *N_SET_ANGLE_LIST)(const UINT CardNo, const UINT HeadNo, const double Angle, const UINT at_once);
extern N_SET_ANGLE_LIST n_set_angle_list;
typedef void (__stdcall *N_SET_SCALE_LIST)(const UINT CardNo, const UINT HeadNo, const double Scale, const UINT at_once);
extern N_SET_SCALE_LIST n_set_scale_list;
typedef void (__stdcall *N_APPLY_MCBSP_LIST)(const UINT CardNo, const UINT HeadNo, const UINT at_once);
extern N_APPLY_MCBSP_LIST n_apply_mcbsp_list;
typedef void (__stdcall *SET_OFFSET_XYZ_LIST)(const UINT HeadNo, const long XOffset, const long YOffset, const long ZOffset, const UINT at_once);
extern SET_OFFSET_XYZ_LIST set_offset_xyz_list;
typedef void (__stdcall *SET_OFFSET_LIST)(const UINT HeadNo, const long XOffset, const long YOffset, const UINT at_once);
extern SET_OFFSET_LIST set_offset_list;
typedef void (__stdcall *SET_MATRIX_LIST)(const UINT HeadNo, const UINT Ind1, const UINT Ind2, const double Mij, const UINT at_once);
extern SET_MATRIX_LIST set_matrix_list;
typedef void (__stdcall *SET_ANGLE_LIST)(const UINT HeadNo, const double Angle, const UINT at_once);
extern SET_ANGLE_LIST set_angle_list;
typedef void (__stdcall *SET_SCALE_LIST)(const UINT HeadNo, const double Scale, const UINT at_once);
extern SET_SCALE_LIST set_scale_list;
typedef void (__stdcall *APPLY_MCBSP_LIST)(const UINT HeadNo, const UINT at_once);
extern APPLY_MCBSP_LIST apply_mcbsp_list;
typedef void (__stdcall *N_SET_MARK_SPEED)(const UINT CardNo, const double Speed);
extern N_SET_MARK_SPEED n_set_mark_speed;
typedef void (__stdcall *N_SET_JUMP_SPEED)(const UINT CardNo, const double Speed);
extern N_SET_JUMP_SPEED n_set_jump_speed;
typedef void (__stdcall *N_SET_SKY_WRITING_PARA_LIST)(const UINT CardNo, const double Timelag, const long LaserOnShift, const UINT Nprev, const UINT Npost);
extern N_SET_SKY_WRITING_PARA_LIST n_set_sky_writing_para_list;
typedef void (__stdcall *N_SET_SKY_WRITING_LIST)(const UINT CardNo, const double Timelag, const long LaserOnShift);
extern N_SET_SKY_WRITING_LIST n_set_sky_writing_list;
typedef void (__stdcall *N_SET_SKY_WRITING_LIMIT_LIST)(const UINT CardNo, const double CosAngle);
extern N_SET_SKY_WRITING_LIMIT_LIST n_set_sky_writing_limit_list;
typedef void (__stdcall *N_SET_SKY_WRITING_MODE_LIST)(const UINT CardNo, const UINT Mode);
extern N_SET_SKY_WRITING_MODE_LIST n_set_sky_writing_mode_list;
typedef void (__stdcall *N_SET_SCANNER_DELAYS)(const UINT CardNo, const UINT Jump, const UINT Mark, const UINT Polygon);
extern N_SET_SCANNER_DELAYS n_set_scanner_delays;
typedef void (__stdcall *N_SET_JUMP_MODE_LIST)(const UINT CardNo, const long Flag);
extern N_SET_JUMP_MODE_LIST n_set_jump_mode_list;
typedef void (__stdcall *N_ENDURING_WOBBEL)(const UINT CardNo);
extern N_ENDURING_WOBBEL n_enduring_wobbel;
typedef void (__stdcall *N_SET_DELAY_MODE_LIST)(const UINT CardNo, const UINT VarPoly, const UINT DirectMove3D, const UINT EdgeLevel, const UINT MinJumpDelay, const UINT JumpLengthLimit);
extern N_SET_DELAY_MODE_LIST n_set_delay_mode_list;
typedef void (__stdcall *SET_MARK_SPEED)(const double Speed);
extern SET_MARK_SPEED set_mark_speed;
typedef void (__stdcall *SET_JUMP_SPEED)(const double Speed);
extern SET_JUMP_SPEED set_jump_speed;
typedef void (__stdcall *SET_SKY_WRITING_PARA_LIST)(const double Timelag, const long LaserOnShift, const UINT Nprev, const UINT Npost);
extern SET_SKY_WRITING_PARA_LIST set_sky_writing_para_list;
typedef void (__stdcall *SET_SKY_WRITING_LIST)(const double Timelag, const long LaserOnShift);
extern SET_SKY_WRITING_LIST set_sky_writing_list;
typedef void (__stdcall *SET_SKY_WRITING_LIMIT_LIST)(const double CosAngle);
extern SET_SKY_WRITING_LIMIT_LIST set_sky_writing_limit_list;
typedef void (__stdcall *SET_SKY_WRITING_MODE_LIST)(const UINT Mode);
extern SET_SKY_WRITING_MODE_LIST set_sky_writing_mode_list;
typedef void (__stdcall *SET_SCANNER_DELAYS)(const UINT Jump, const UINT Mark, const UINT Polygon);
extern SET_SCANNER_DELAYS set_scanner_delays;
typedef void (__stdcall *SET_JUMP_MODE_LIST)(const long Flag);
extern SET_JUMP_MODE_LIST set_jump_mode_list;
typedef void (__stdcall *ENDURING_WOBBEL)(void);
extern ENDURING_WOBBEL enduring_wobbel;
typedef void (__stdcall *SET_DELAY_MODE_LIST)(const UINT VarPoly, const UINT DirectMove3D, const UINT EdgeLevel, const UINT MinJumpDelay, const UINT JumpLengthLimit);
extern SET_DELAY_MODE_LIST set_delay_mode_list;
typedef void (__stdcall *N_STEPPER_ENABLE_LIST)(const UINT CardNo, const long Enable1, const long Enable2);
extern N_STEPPER_ENABLE_LIST n_stepper_enable_list;
typedef void (__stdcall *N_STEPPER_CONTROL_LIST)(const UINT CardNo, const long Period1, const long Period2);
extern N_STEPPER_CONTROL_LIST n_stepper_control_list;
typedef void (__stdcall *N_STEPPER_ABS_NO_LIST)(const UINT CardNo, const UINT No, const long Pos);
extern N_STEPPER_ABS_NO_LIST n_stepper_abs_no_list;
typedef void (__stdcall *N_STEPPER_REL_NO_LIST)(const UINT CardNo, const UINT No, const long dPos);
extern N_STEPPER_REL_NO_LIST n_stepper_rel_no_list;
typedef void (__stdcall *N_STEPPER_ABS_LIST)(const UINT CardNo, const long Pos1, const long Pos2);
extern N_STEPPER_ABS_LIST n_stepper_abs_list;
typedef void (__stdcall *N_STEPPER_REL_LIST)(const UINT CardNo, const long dPos1, const long dPos2);
extern N_STEPPER_REL_LIST n_stepper_rel_list;
typedef void (__stdcall *N_STEPPER_WAIT)(const UINT CardNo, const UINT No);
extern N_STEPPER_WAIT n_stepper_wait;
typedef void (__stdcall *STEPPER_ENABLE_LIST)(const long Enable1, const long Enable2);
extern STEPPER_ENABLE_LIST stepper_enable_list;
typedef void (__stdcall *STEPPER_CONTROL_LIST)(const long Period1, const long Period2);
extern STEPPER_CONTROL_LIST stepper_control_list;
typedef void (__stdcall *STEPPER_ABS_NO_LIST)(const UINT No, const long Pos);
extern STEPPER_ABS_NO_LIST stepper_abs_no_list;
typedef void (__stdcall *STEPPER_REL_NO_LIST)(const UINT No, const long dPos);
extern STEPPER_REL_NO_LIST stepper_rel_no_list;
typedef void (__stdcall *STEPPER_ABS_LIST)(const long Pos1, const long Pos2);
extern STEPPER_ABS_LIST stepper_abs_list;
typedef void (__stdcall *STEPPER_REL_LIST)(const long dPos1, const long dPos2);
extern STEPPER_REL_LIST stepper_rel_list;
typedef void (__stdcall *STEPPER_WAIT)(const UINT No);
extern STEPPER_WAIT stepper_wait;

#if defined(__cplusplus)
}      //  extern "C"
#endif //defined(__cplusplus)
